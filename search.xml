<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java常见面试题]]></title>
    <url>%2Fjavamst%2F</url>
    <content type="text"><![CDATA[(adsbygoogle=window.adsbygoogle||[]).push({})一、Java基础部分1.基本数据类型以及字节数四类八种 整型 -- 默认 是 int byte 字节 1字节 [-128,127] short 短整型 2字节 int 整型 4字节 long 长整型 8字节 数字后需要添加l或者L 浮点型 -- 默认 是 double 无限接近于一个数 float 单精度 4字节 数字后需要添加f或者F double 双精度 8字节 字符型 -- 默认 是 &apos;\u0000&apos; char 字符型 2字节 放在单引号中，只有一个字符 &apos;a&apos; 布尔型 -- 默认 是 false boolean 1字节 true/false 2.标识符命名规则标识符的含义： 是指在程序中，我们自己定义的内容，譬如，类的名字，方法名称以及变量名称等等，都是标识符。 命名规则：（硬性要求） 标识符可以包含英文字母，0-9的数字，$以及_ 标识符不能以数字开头 标识符不是关键字 命名规范：（非硬性要求） 类名规范：首字符大写，后面每个单词首字母大写（大驼峰式）。 变量名规范：首字母小写，后面每个单词首字母大写（小驼峰式）。 方法名规范：同变量名。 点击进入《Java命名规范》3.方法重写和重载的区别重写是子类对父类的允许访问的方法的实现过程进行重新编写, 返回值和形参都不能改变。即外壳不变，核心重写！重写的好处在于子类可以根据需要，定义特定于自己的行为。 也就是说子类能够根据需要实现父类的方法。重写方法不能抛出新的检查异常或者比被重写方法申明更加宽泛的异常。例如： 父类的一个方法申明了一个检查异常 IOException，但是在重写这个方法的时候不能抛出 Exception 异常，因为 Exception 是 IOException 的父类，只能抛出 IOException 的子类异常。在面向对象原则里，重写意味着可以重写任何现有方法。重写(Override)方法的重写规则参数列表必须完全与被重写方法的相同。返回类型与被重写方法的返回类型可以不相同，但是必须是父类返回值的派生类（java5 及更早版本返回类型要一样，java7 及更高版本可以不同）。访问权限不能比父类中被重写的方法的访问权限更低。例如：如果父类的一个方法被声明为 public，那么在子类中重写该方法就不能声明为 protected。父类的成员方法只能被它的子类重写。声明为 final 的方法不能被重写。声明为 static 的方法不能被重写，但是能够被再次声明。子类和父类在同一个包中，那么子类可以重写父类所有方法，除了声明为 private 和 final 的方法。子类和父类不在同一个包中，那么子类只能够重写父类的声明为 public 和 protected 的非 final 方法。重写的方法能够抛出任何非强制异常，无论被重写的方法是否抛出异常。但是，重写的方法不能抛出新的强制性异常，或者比被重写方法声明的更广泛的强制性异常，反之则可以。构造方法不能被重写。如果不能继承一个方法，则不能重写这个方法。当需要在子类中调用父类的被重写方法时，要使用 super 关键字。重载(Overload)重载(overloading) 是在一个类里面，方法名字相同，而参数不同。返回类型可以相同也可以不同。每个重载的方法（或者构造函数）都必须有一个独一无二的参数类型列表。最常用的地方就是构造器的重载。重载规则:被重载的方法必须改变参数列表(参数个数或类型不一样)；被重载的方法可以改变返回类型；被重载的方法可以改变访问修饰符；被重载的方法可以声明新的或更广的检查异常；方法能够在同一个类中或者在一个子类中被重载。无法以返回值类型作为重载函数的区分标准。(adsbygoogle=window.adsbygoogle||[]).push({})总结方法的重写(Overriding)和重载(Overloading)是java多态性的不同表现，重写是父类与子类之间多态性的一种表现，重载可以理解成多态的具体表现形式。(1)方法重载是一个类中定义了多个方法名相同,而他们的参数的数量不同或数量相同而类型和次序不同,则称为方法的重载(Overloading)。(2)方法重写是在子类存在方法与父类的方法的名字相同,而且参数的个数与类型一样,返回值也一样的方法,就称为重写(Overriding)。(3)方法重载是一个类的多态性表现,而方法重写是子类与父类的一种多态性表现。4.面向对象的特性，以及你是怎么理解的？(面向对象三大特性，五大基本原则)三大特性是：封装,继承,多态五大基本原则单一职责原则SRP(Single Responsibility Principle)开放封闭原则OCP(Open－Close Principle)替换原则(the Liskov Substitution Principle LSP)依赖原则(the Dependency Inversion Principle DIP)接口分离原则(the Interface Segregation Principle ISP)点击进入《Java基础：面向对象三大特征、五大原则》点击进入《面向对象三大基本特性5.访问修饰符 public、private、protected、以及不写时的区别注：不写时默认为friendly(default)，默认为包内使用。6.子类继承父类，静态代码块、构造代码块、构造函数的执行顺序1、实现父类公共的静态属性或静态的块级代码2、实现本身的公共的静态属性—————————-静态初始化3、实现父类普通成员初始化（包括构造代码块）4、执行父类的构造方法—————————-父类初始化5、实现子类普通成员初始化（包括构造代码块）6、执行本身的构造函数—————————-子类初始化7、静态方法不执行补充：1.当父类有多个构造函数，若子类用super(参数信息)指明调用父类有参数的构造函数，则不执行无参数的构造方法2.静态代码块的定义是在类被加载进内存中的方法区的时候调用,而加载类到内存中只需要执行一次即可,所以静态代码块也是只执行一次static代码块只在类加载时执行，类是用类加载器来读取的，类加载器是带有一个缓存区的,它会把读取到的类缓存起来,所以在一次虚拟机运行期间，一个类只会被加载一次，这样的话静态代码块只会运行一次7.&amp; 和 &amp;&amp; 的区别&amp;和&amp;&amp;都可以用作逻辑与的运算符，表示逻辑与（and），当运算符两边的表达式的结果都为true时，整个运算结果才为true，否则，只要有一方为false，则结果为false。&amp;&amp;还具有短路的功能，即如果第一个表达式为false，则不再计算第二个表达式。&amp;还可以用作按位与的运算符，两个表达式的值按二进制位展开，对应的位(bit)按值进行“与”运算，结果保留在该位上。8.什么是抽象类在面向对象的概念中，所有的对象都是通过类来描绘的，但是反过来，并不是所有的类都是用来描绘对象的，如果一个类中没有包含足够的信息来描绘一个具体的对象，这样的类就是抽象类。抽象类除了不能实例化对象之外，类的其它功能依然存在，成员变量、成员方法和构造方法的访问方式和普通类一样。由于抽象类不能实例化对象，所以抽象类必须被继承，才能被使用。也是因为这个原因，通常在设计阶段决定要不要设计抽象类。父类包含了子类集合的常见的方法，但是由于父类本身是抽象的，所以不能使用这些方法。在Java中抽象类表示的是一种继承关系，一个类只能继承一个抽象类，而一个类却可以实现多个接口。声明抽象方法会造成以下两个结果：如果一个类包含抽象方法，那么该类必须是抽象类。任何子类必须重写父类的抽象方法，或者声明自身为抽象类。继承抽象方法的子类必须重写该方法。否则，该子类也必须声明为抽象类。最终，必须有子类实现该抽象方法，否则，从最初的父类到最终的子类都不能用来实例化对象。9.一个抽象类没有抽象方法，可不可以定义为抽象类？如果可以，有何意义？可以定义成抽象类。主要目的是不让外界创建对象。要想访问它只能通过他的子类去使用。这种场景更多的出现在各种工具类中，如果它的所有方法都是静态的，那么把它定义为抽象的，会从机制上防止实例化。10.abstract不能和哪些关键字共存，为什么？final。冲突。因为被final修饰的类不能有子类。而被abstract修饰的类一定是一个父类。private。冲突。抽象类中私有的抽象方法不能被子类重写。static。无意义。如果static可以修饰抽象方法，那就可以直接通过类名调用方法，但是抽象方法根本没有方法体，这样抽象方法运行就没意义了。11.抽象类和接口的区别在抽象类中可以写非抽象的方法，从而避免在子类中重复书写他们，这样可以提高代码的复用性，这是抽象类的优势；接口中只能有抽象的方法。一个类只能继承一个直接父类，这个父类可以是具体的类也可是抽象类；但是一个类可以实现多个接口。实现 抽象类使用extends关键字来继承抽象类。如果子类不是抽象类的话，它需要提供抽象类中所有声明的方法的实现。子类使用关键字implements来实现接口。它需要提供接口中所有声明的方法的实现。抽象类可以有构造器，而接口不能有构造器抽象方法可以有public、protected和default这些修饰符，接口方法默认修饰符是public。你不可以使用其它修饰符。抽象方法比接口速度要快，接口是稍微有点慢的，因为它需要时间去寻找在类中实现的方法。如果你往抽象类中添加新的方法，你可以给它提供默认的实现。因此你不需要改变你现在的代码。 如果你往接口中添加方法，那么你必须改变实现该接口的类。12.什么是匿名内部类匿名内部类也就是没有名字的内部类正因为没有名字，所以匿名内部类只能使用一次，它通常用来简化代码编写但使用匿名内部类还有个前提条件：必须继承一个父类或实现一个接口123new 类名或者接口名() &#123; 重写方法();&#125;;本质：其实是继承该类或者实现接口的子类匿名对象这也就是下例中，可以直接使用new Inner() {}.show(); 的原因 == 子类对象.show();123456789101112131415161718interface Inner &#123; public abstract void show(); &#125; class Outer &#123; public void method()&#123; new Inner() &#123; public void show() &#123; System.out.println("HelloWorld"); &#125; &#125;.show(); &#125; &#125; class Test &#123; public static void main(String[] args) &#123; Outer o = new Outer(); o.method(); &#125; &#125;13.==号和equals方法的区别== 的作用：基本类型：比较的就是值是否相同引用类型：比较的就是地址值是否相同equals 的作用:引用类型：默认情况下，比较的是地址值。注：不过，我们可以根据情况自己重写该方法。一般重写都是自动生成，比较对象的成员变量值是否相同。14.String,StringBuffer,StringBuilder的区别String 字符串常量StringBuffer 字符串变量（线程安全）StringBuilder 字符串变量（非线程安全）StringBuffer、StringBuilder和String一样，也用来代表字符串。String类是不可变类，任何对String的改变都 会引发新的String对象的生成；StringBuffer则是可变类，任何对它所指代的字符串的改变都不会产生新的对象。先说一下集合的故事，HashTable是线程安全的，很多方法都是synchronized方法，而HashMap不是线程安全的，但其在单线程程序中的性能比HashTable要高。StringBuffer和StringBuilder类的区别也是如此，他们的原理和操作基本相同，区别在于StringBufferd支持并发操作，线性安全的，适 合多线程中使用。StringBuilder不支持并发操作，线性不安全的，不适合多线程中使用。新引入的StringBuilder类不是线程安全的，但其在单线程中的性能比StringBuffer高。15.为什么会有基本类型包装类基本类型的优势：数据存储相对简单，运算效率比较高。包装类的优势：自带方法丰富，集合的元素必须是对象类型，体现了Java一切皆是对象的思想。我们知道Java是一个面相对象的编程语言，基本类型并不具有对象的性质，为了让基本类型也具有对象的特征，就出现了包装类型（如我们在使用集合类型Collection时就一定要使用包装类型而非基本类型），它相当于将基本类型“包装起来”，使得它具有了对象的性质，并且为其添加了属性和方法，丰富了基本类型的操作。另外，当需要往ArrayList，HashMap中放东西时，像int，double这种基本类型是放不进去的，因为容器都是装object的，这是就需要这些基本类型的包装器类了。点击进入《java中有了基本类型为什么还要有包装类型》16.自动装箱/拆箱当上方表格中列出的基础类型与它们的包装类有如下几种情况时，编译器会自动帮我们进行装箱或拆箱。进行 = 赋值操作（装箱或拆箱）进行+，-，*，/混合运算 （拆箱）进行&gt;,&lt;,==比较运算（拆箱）调用equals进行比较（装箱）ArrayList,HashMap等集合类 添加基础类型数据时（装箱）(adsbygoogle=window.adsbygoogle||[]).push({})点击进入《5分钟彻底理解-Java自动装箱、拆箱》17.数组和集合的区别，分别什么时候用数组声明了它容纳的元素的类型，而集合不声明。数组是静态的，一个数组实例具有固定的大小，一旦创建了就无法改变容量了。而集合是可以动态扩展容量，可以根据需要动态改变大小，集合提供更多的成员方法，能满足更多的需求。数组是大小固定的,一旦创建无法扩容;集合大小不固定。数组的存放的类型只能是一种,集合存放的类型可以不是一种(不加泛型时添加的类型是Object)。数组是java语言中内置的数据类型,是线性排列的,执行效率或者类型检查,都是最快的。ArrayList就是基于数组创建的容器类。若程序时不知道究竟需要多少对象，需要在空间不足时自动扩增容量，则需要使用容器类库，array不适用。使用相应的toArray()和Arrays.asList()方法可以相互转换。18.Iterator和ListIterator的区别Iterator迭代器包含的方法有：hasNext()：如果迭代器指向位置后面还有元素，则返回 true，否则返回falsenext()：返回集合中Iterator指向位置后面的元素remove()：删除集合中Iterator指向位置后面的元素ListIterator迭代器包含的方法有：add(E e): 将指定的元素插入列表，插入位置为迭代器当前位置之前hasNext()：以正向遍历列表时，如果列表迭代器后面还有元素，则返回 true，否则返回falsehasPrevious():如果以逆向遍历列表，列表迭代器前面还有元素，则返回 true，否则返回falsenext()：返回列表中ListIterator指向位置后面的元素nextIndex():返回列表中ListIterator所需位置后面元素的索引previous():返回列表中ListIterator指向位置前面的元素previousIndex()：返回列表中ListIterator所需位置前面元素的索引remove():从列表中删除next()或previous()返回的最后一个元素（有点拗口，意思就是对迭代器使用hasNext()方法时，删除ListIterator指向位置后面的元素；当对迭代器使用hasPrevious()方法时，删除ListIterator指向位置前面的元素）set(E e)：从列表中将next()或previous()返回的最后一个元素返回的最后一个元素更改为指定元素e不同点1.使用范围不同，Iterator可以应用于所有的集合，Set、List和Map和这些集合的子类型。而ListIterator只能用于List及其子类型。2.ListIterator有add方法，可以向List中添加对象，而Iterator不能。3.ListIterator和Iterator都有hasNext()和next()方法，可以实现顺序向后遍历，但是ListIterator有hasPrevious()和previous()方法，可以实现逆向（顺序向前）遍历。Iterator不可以。4.ListIterator可以定位当前索引的位置，nextIndex()和previousIndex()可以实现。Iterator没有此功能。5.都可实现删除操作，但是ListIterator可以实现对象的修改，set()方法可以实现。Iterator仅能遍历，不能修改。19.Java集合框架的基础接口有哪些？总共有两大接口：Collection 和Map ，一个元素集合，一个是键值对集合； 其中List和Set接口继承了Collection接口，一个是有序元素集合，一个是无序元素集合； 而ArrayList和 LinkedList 实现了List接口，HashSet实现了Set接口，这几个都比较常用； HashMap 和HashTable实现了Map接口，并且HashTable是线程安全的，但是HashMap性能更好。java.util.Collection [I]java.util.List [I]java.util.ArrayList [C]java.util.LinkedList [C]java.util.Vector [C]java.util.Stack [C]java.util.Set [I]java.util.HashSet [C]java.util.SortedSet [I]java.util.TreeSet [C]java.util.Map [I]java.util.SortedMap [I]java.util.TreeMap [C]java.util.Hashtable [C]java.util.HashMap [C]java.util.LinkedHashMap [C]java.util.WeakHashMap [C]20.遍历一个List有哪些不同的方式？普通for循环。增强for循环（foreach）迭代器（Iterator）21.ArrayList、Vector、LinkedList的区别ArrayList是一个可以处理变长数组的类型，可以存放任意类型的对象。ArrayList的所有方法都是默认在单一线程下进行的，因此ArrayList不具有线程安全性。LinkedList可以看做为一个双向链表，LinkedList也是线程不安全的，在LinkedList的内部实现中，并不是用普通的数组来存放数据的，而是使用结点&lt; node &gt;来存放数据的，有一个指向链表头的结点first和一个指向链表尾的结点last。LinkedList的插入方法的效率要高于ArrayList，但是查询的效率要低一点。Vector也是一个类似于ArrayList的可变长度的数组类型，它的内部也是使用数组来存放数据对象的。值得注意的是Vector与ArrayList唯一的区别是，Vector是线程安全的。在扩展容量的时候，Vector是扩展为原来的2倍，而ArrayList是扩展为原来的1.5倍。线程安全就是多线程访问时，采用了加锁机制，当一个线程访问该类的某个数据时，进行保护，其他线程不能进行访问直到该线程读取完，其他线程才可使用。不会出现数据不一致或者数据污染。线程不安全就是不提供数据访问保护，有可能出现多个线程先后更改数据造成所得到的数据是脏数据。22.栈和队列数据结构栈 (Stack)是一种后进先出(last in first off，LIFO)的数据结构。而队列(Queue)则是一种先进先出 (fisrt in first out，FIFO)的结构。如下图：23.泛型好处把运行时期的错误转移到编译期。消除强制类型转换。 泛型的一个附带好处是，消除源代码中的许多强制类型转换。这使得代码更加可读，并且减少了出错机会。类型安全。 泛型的主要目标是提高 Java 程序的类型安全。通过知道使用泛型定义的变量的类型限制，编译器可以在一个高得多的程度上验证类型假设。没有泛型，这些假设就只存在于程序员的头脑中（或者如果幸运的话，还存在于代码注释中）。潜在的性能收益。 泛型为较大的优化带来可能。在泛型的初始实现中，编译器将强制类型转换（没有泛型的话，程序员会指定这些强制类型转换）插入生成的字节码中。但是更多类型信息可用于编译器这一事实，为未来版本的 JVM 的优化带来可能。由于泛型的实现方式，支持泛型（几乎）不需要 JVM 或类文件更改。所有工作都在编译器中完成，编译器生成类似于没有泛型（和强制类型转换）时所写的代码，只是更能确保类型安全而已。24.集合的三种迭代的能否删除元素普通for循环 可以删除元素但是每删除一个元素下标要–防止漏删。因为当元素被删除时，后面的元素会向前靠也就是下标会改变。增强for循环（foreach） 不能删迭代器 可以删除，只能使用迭代器的remove方法来删除25.HashSet原理我们使用Set集合都是需要去掉重复元素的, 如果在存储的时候逐个equals()比较, 效率较低,哈希算法提高了去重复的效率, 降低了使用equals()方法的次数当HashSet调用add()方法存储对象的时候, 先调用对象的hashCode()方法得到一个哈希值, 然后在集合中查找是否有哈希值相同的对象如果没有哈希值相同的对象就直接存入集合如果有哈希值相同的对象, 就和哈希值相同的对象逐个进行equals()比较,比较结果为false就存入, true则不存注：将自定义类的对象存入HashSet去重复，类中必须重写hashCode()和equals()方法。HashSet实现Set接口，由哈希表（实际上是一个HashMap实例）支持。它不保证set的迭代顺序；特别是它不保证该顺序恒久不变。此类允许使用null元素。HashSet中不允许有重复元素，这是因为HashSet是基于HashMap实现的，HashSet中的元素都存放在HashMap的key上面，而value中的值都是统一的一个private static final Object PRESENT = new Object();。HashSet跟HashMap一样，都是一个存放链表的数组。点击进入《【数据结构】HashSet原理及实现学习总结》26.TreeSet原理TreeSet是基于TreeMap实现的，同样的只是用key及其操作，然后把value置为dummy的object。TreeSet是一个有序集合，TreeSet中的元素将按照升序排列，缺省是按照自然排序进行排列，意味着TreeSet中的元素要实现Comparable接口。或者有一个自定义的比较器。我们可以在构造TreeSet对象时，传递实现Comparator接口的比较器对象实例,。例如：SetsetUser2 = new TreeSet&lt;&gt;(new User2());27.HashMap和Hashtable的区别HashMap 不是线程安全的。HashMap 是 map 接口的实现类，是将键映射到值的对象，其中键和值都是对象，并且不能包含重复键，但可以包含重复值。HashMap 允许 null key 和 null value，而 HashTable 不允许。HashTable 是线程安全 Collection。HashMap 是 HashTable 的轻量级实现，他们都完成了Map 接口，主要区别在于 HashMap 允许 null key 和 null value,由于非线程安全，效率上可能高于 Hashtable。HashMap允许将 null 作为一个 entry 的 key 或者 value，而 Hashtable 不允许。HashMap 把 Hashtable 的 contains 方法去掉了，改成 containsValue 和 containsKey。因为 contains 方法容易让人引起误解。HashTable 继承自 Dictionary 类，而 HashMap 是 Java1.2 引进的 Map interface 的一个实现。HashTable 的方法是 Synchronize 的，而 HashMap 不是，在多个线程访问 Hashtable 时，不需要自己为它的方法实现同步，而 HashMap 就必须为之提供外同步。Hashtable 和 HashMap 采用的 hash/rehash 算法都大概一样，所以性能不会有很大的差异。28.throws和throw的区别Throw用于方法内部，Throws用于方法声明上。Throw后跟异常对象，Throws后跟异常类型。Throw后只能跟一个异常对象，Throws后可以一次声明多种异常类型。29.final,finally和finalize的区别final 用于申明属性，方法和类，表示属性不可变，方法不可以被覆盖，类不可以被继承。finally 是异常处理语句结构中，表示总是执行的部分。finallize 表示是object类一个方法，在垃圾回收机制中执行的时候会被调用被回收对象的方法。允许回收此前未回收的内存垃圾。所有object都继承了，finalize（）方法。30.如果catch里面有return语句，请问finally的代码还会执行吗?如果会，请问是在return前还是return后？不管有没有出现异常，finally块中代码都会执行；当try和catch中有return时，finally仍然会执行；finally中最好不要包含return，否则程序会提前退出，返回值不是try或catch中保存的返回值。finally块的语句在try或catch中的return语句执行之后返回之前执行，且finally里的修改语句可能影响也可能不影响try或catch中 return已经确定的返回值，若finally里也有return语句则覆盖try或catch中的return语句直接返回。点击进入《Java finally语句到底是在return之前还是之后执行？》点击进入《有return的情况下try catch finally的执行顺序（最有说服力的总结）》31.是否可以继承String不可以，因为String类有final修饰符，而final修饰的类是不能被继承的，实现细节不允许改变。32.break 、continue和return的区别break只跳出当前for循环continue是终止当前循环语句的执行，继续下一条循环语句。return是结束当前方法的执行33.异常分为哪些种类Error类代表了编译和系统的错误，不允许捕获；Exception类代表了标准Java库方法所激发的异常。Exception类还包含运行异常类Runtime_Exception和非运行异常类Non_RuntimeException这两个直接的子类。34.5个常见的RuntimeExceptionNullPointerException - 空指针引用异常ClassCastException - 类型强制转换异常。IllegalArgumentException - 传递非法参数异常。ArithmeticException - 算术运算异常ArrayStoreException - 向数组中存放与声明类型不兼容对象异常IndexOutOfBoundsException 下标越界异常NegativeArraySizeException - 创建一个大小为负数的数组错误异常NumberFormatException - 数字格式异常SecurityException - 安全异常UnsupportedOperationException 不支持的操作异常java.lang.StackOverflowError堆栈溢出错误。当一个应用递归调用的层次太深而导致堆栈溢出时抛出该错误java.lang.ThreadDeath线程结束。当调用Thread类的stop方法时抛出该错误，用于指示线程结束。java.lang.ArithmeticException “数学运算异常”，比如程序中出现了除以零这样的运算就会出这样的异常。35.switch是否可以作用在byte上？是否可以作用在long上？是否可以作用在String上？switch可作用于char byte short intswitch可作用于char byte short int对应的包装类switch不可作用于long double float boolean，包括他们的包装类switch中可以是字符串类型,String(jdk1.7之后才可以作用在string上)switch中可以是枚举类型36.String是基本数据类型么基本数据类型和引用类型的区别主要在于基本数据类型是分配在栈上的，而引用类型是分配在堆上的String不是基本数据类型，而是一个类（class），是Java编程语言中的字符串。String对象是char的有序集合，并且该值是不可变的。因为java.lang.String类是final类型的，因此不可以继承这个类、不能修改这个类。Java中的String是正宗的引用类型，但是，一定条件下，String会表现出一定的值特性。37.short s = 1 ; s = s + 1;有什么错？ s += 1； 有什么错？对于short s1 = 1; s1 = s1 + 1; 由于s1+1运算时会自动提升表达式的类型（默认为int），所以结果是int型，再赋值给short类型s1时，编译器将报告需要强制转换类型的错误。对于short s1 = 1; s1 += 1;由于 += 是java语言规定的运算符，java编译器会对它进行特殊处理，因此可以正确编译。隐式转换特征：从小到大，可以隐式转换，数据类型将自动提升。byte，short，char –&gt;int –&gt;long –&gt;float –&gt;double注意：long是8个字节，float是4个字节。long是整数，float是浮点型，整数和浮点数的存储规则不一样，记住一点long的范围是小于float的。例 :byte a=10;int b=a;当编译intb=a 时， a隐式转换为int类型。在使用 =，+=，-=，*=，/= , %= 时隐含有数据类型的转换。38.String类常用的方法有哪些？int length() 返回此字符串的长度。charAt(int index) 返回指定索引处的 char 值。int compareTo(Object o) 把这个字符串和另一个对象比较。String concat(String str) 将指定字符串连接到此字符串的结尾。int indexOf(String str) 返回指定子字符串在此字符串中第一次出现处的索引。点击进入《Java String 类》39.Integer a = 200; Integer b = 200 ; System.out.println(a == b);执行结果是true还是false？在Object类中中，equals()和”==”是等价的，但是在大部分的包装类中，都重写了equals()方法，所以两者还是有区别的。总的来说”==”是一个关系运算符，如果比较的两端都为原生数据类型，则表示判断两者的值是否相等，如果比较的两端都为引用类型，则比较两者所指向对象的地址是否相同；对于equals()方法，如果这个对象所在的类重写了equals方法，则按照重写的方法进行比较，如果没有，则比较两者所指向对象的地址是否相同,其实就是使用”==”进行比较。在-128-127之间，a和b都没有new成一个新的对象，可以直接把值进行比较，如果不在这个范围，则new一个新的Integer对象并返回。查看Integer类的源码可以发现，这个数组里面缓存了基本类型-128-127之间的Integer对象。但是由于是两个new出来的对象（引用类型）做比较，所以==肯定返回的false。40.字节流如何转成字符流？将字节流转换成字符流的桥梁——InputStreamReader；InputStreamReader(InputStream in) ：创建一个使用默认字符集的 InputStreamReader。传入的对象是InputStream类型，而自己本身是Reader的子类。将字符流转换成字节流的桥梁——OutputStreamWriter。OutputStreamWriter(OutputStream out) ：创建使用默认字符编码的 OutputStreamWriter。传入的对象是OutputStream类型，而自己本身是Writer的子类。点击进入《Java 字节流 字符流 转换流》41.java中有几种类型的流字节流和字符流。字节流继承于InputStream、OutputStream，字符流继承于Reader、Writer。在java.io 包中还有许多其他的流，主要是为了提高性能和使用方便。关于Java的I/O需要注意的有两点：一是两种对称性（输入和输出的对称性，字节和字符的对称性）；二是两种设计模式（适配器模式和装潢模式）。42.字节流和字符流的区别Java中的字节流处理的最基本单位为单个字节，它通常用来处理二进制数据。Java中最基本的两个字节流类是InputStream和OutputStream，它们分别代表了组基本的输入字节流和输出字节流。InputStream类与OutputStream类均为抽象类，我们在实际使用中通常使用Java类库中提供的它们的一系列子类。Java中的字符流处理的最基本的单元是Unicode码元（大小2字节），它通常用来处理文本数据。所谓Unicode码元，也就是一个Unicode代码单元，范围是0x0000~0xFFFF。在以上范围内的每个数字都与一个字符相对应，Java中的String类型默认就把字符以Unicode规则编码而后存储在内存中。然而与存储在内存中不同，存储在磁盘上的数据通常有着各种各样的编码方式。使用不同的编码方式，相同的字符会有不同的二进制表示。实际上字符流是这样工作的：输出字符流：把要写入文件的字符序列（实际上是Unicode码元序列）转为指定编码方式下的字节序列，然后再写入到文件中；输入字符流：把要读取的字节序列按指定编码方式解码为相应字符序列（实际上是Unicode码元序列从）从而可以存在内存中。点击进入《理解Java中字符流与字节流的区别》43.如何跳出多重嵌套循环，继续执行后面的代码？在java中，使用break可以跳出循环，默认情况下是跳出最里层的循环，假如我们要跳出多层循环怎么办呢，Java替我们已经做好了这一点，就是用 循环标签 ：即是对某个循环定义一个名字，然后在 break 后面加上这个名字，当符合 break 条件时，程序就会跳到规定的循环那。12345678910111213public static void main(String[] args)&#123; lableB: for(int i=0;i&lt;3;i++)&#123; lableA: for(int j=0;j&lt;3;j++)&#123; System.out.println(j); if(j==1)&#123; break lableB; &#125; &#125; &#125; System.out.println("over!");注：标签名的命名方法是：java命名规则 和 半角冒号 比如： lableA:PS：lableB标签的定义需要在使用break lableB语句之前定义。break只跳出当前for循环return是结束当前方法的执行continue是终止当前循环语句的执行，继续下一条循环语句。(adsbygoogle=window.adsbygoogle||[]).push({})44.异常的父类Throwable是所有异常类的根类，也就是说所有异常类都继承于它。45.线程的生命周期点击进入《线程生命周期》46.线程的实现方式有哪些方法1： extends Thread ,重写run方法方法2： implements Runnable ，实现 run方法方法3：implements Callable，实现call方法47.线程怎么通信利用共享对象实现通信忙等（busy waiting）wait(), notify() and notifyAll()信号丢失（Missed Signals）虚假唤醒（Spurious Wakeups）多个线程等待相同的信号不要对String对象或者全局对象调用wait方法线程通信的目的就是让线程间具有互相发送信号通信的能力。而且，线程通信可以实现，一个线程可以等待来自其他线程的信号。举个例子，一个线程B可能正在等待来自线程A的信号，这个信号告诉线程B数据已经处理好了。点击进入《Java线程通信（Thread Signaling）》48.线程中wait和sleep方法的区别wait()和sleep()的关键的区别在于，wait()是用于线程间通信的，而sleep()是用于短时间暂停当前线程。更加明显的一个区别在于，当一个线程调用wait()方法的时候，会释放它锁持有的对象的管程（monitors）和锁，但是调用sleep()方法的时候，不会释放他所持有的管程。注：在多线程访问共享资源的时候，经常会带来可见性和原子性的安全问题。为了解决这类线程安全的问题，Java提供了同步机制、互斥锁机制，这个机制保证了在同一时刻只有一个线程能访问共享资源。这个机制的保障来源于监视锁Monitor，每个对象都拥有自己的监视锁Monitor。点击进入《Java中Wait、Sleep和Yield方法的区别》点击进入《深入理解多线程（四）—— Moniter的实现原理》49.什么是线程池？如何使用？java.util.concurrent.Executors提供了一个 java.util.concurrent.Executor接口的实现用于创建线程池。程序启动一个新线程成本是比较高的，因为它涉及到要与操作系统进行交互。而使用线程池可以很好的提高性能，尤其是当程序中要创建大量生存期很短的线程时，更应该考虑使用线程池。线程池里的每一个线程代码结束后，并不会死亡，而是再次回到线程池中成为空闲状态，等待下一个对象来使用。点击进入《如何优雅的使用和理解线程池》50.常用的线程池有哪些？newFixedThreadPool底层：返回ThreadPoolExecutor实例，接收参数为所设定线程数量nThread，corePoolSize为nThread，maximumPoolSize为nThread；keepAliveTime为0L(不限时)；unit为：TimeUnit.MILLISECONDS；WorkQueue为：new LinkedBlockingQueue() 无解阻塞队列通俗：创建可容纳固定数量线程的池子，每隔线程的存活时间是无限的，当池子满了就不在添加线程了；如果池中的所有线程均在繁忙状态，对于新任务会进入阻塞队列中(无界的阻塞队列)适用：执行长期的任务，性能好很多newSingleThreadExecutor底层：FinalizableDelegatedExecutorService包装的ThreadPoolExecutor实例，corePoolSize为1；maximumPoolSize为1；keepAliveTime为0L；unit为：TimeUnit.MILLISECONDS；workQueue为：new LinkedBlockingQueue() 无解阻塞队列通俗：创建只有一个线程的线程池，且线程的存活时间是无限的；当该线程正繁忙时，对于新任务会进入阻塞队列中(无界的阻塞队列)适用：一个任务一个任务执行的场景点击进入《Java 四种线程池的用法分析》点击进入《Java线程池种类、区别和适用场景》51.启动线程是用run()还是用start()？启动线程是用start()start（）方法来启动线程，真正实现了多线程运行，这时无需等待run方法体代码执行完毕而直接继续执行下面的代码：通过调用Thread类的start()方法来启动一个线程，这时此线程是处于就绪状态，并没有运行。然后通过此Thread类调用方法run()来完成其运行操作的，这里方法run()称为线程体，它包含了要执行的这个线程的内容，Run方法运行结束，此线程终止，而CPU再运行其它线程。run（）方法当作普通方法的方式调用，程序还是要顺序执行，还是要等待run方法体执行完毕后才可继续执行下面的代码：而如果直接用Run方法，这只是调用一个方法而已，程序中依然只有主线程–这一个线程，其程序执行路径还是只有一条，这样就没有达到写线程的目的。注：Thread和Runnable的区别：如果一个类继承Thread，则不适合资源共享。但是如果实现了Runable接口的话，则很容易的实现资源共享。实现Runnable接口比继承Thread类所具有的优势：1）：适合多个相同的程序代码的线程去处理同一个资源2）：可以避免java中的单继承的限制3）：增加程序的健壮性，代码可以被多个线程共享，代码和数据独立。52.线程和进程的区别地址空间和其它资源：进程间相互独立，同一进程的各线程间共享。某进程内的线程在其它进程不可见。通信：进程间通信IPC，线程间可以直接读写进程数据段（如全局变量）来进行通信——需要进程同步和互斥手段的辅助，以保证数据的一致性。调度和切换：线程上下文切换比进程上下文切换要快得多。线程的改变只代表了 CPU 执行过程的改变，而没有发生进程所拥有的资源变化。计算机内的软硬件资源的分配与线程无关，线程只能共享它所属进程的资源。进程拥有一个完整的虚拟地址空间，不依赖于线程而独立存在；反之，线程是进程的一部分，没有自己的地址空间，与进程内的其他线程一起共享分配给该进程的所有资源。子进程和父进程有不同的代码和数据空间，而多个线程则共享数据空间，每个线程有自己的执行堆栈和程序计数器为其执行上下文。多线程主要是为了节约CPU时间，发挥利用，根据具体情况而定。线程的运行中需要使用计算机的内存资源和CPU。(adsbygoogle=window.adsbygoogle||[]).push({})注：线程：一个服务器通常需要接收大量且不确定数量用户的并发请求，为每一个请求都创建一个进程显然是行不通的，——无论是从系统资源开销方面或是响应用户请求的效率方面来看。因此，操作系统中线程的概念便被引进了。线程，是进程的一部分。线程有时又被称为轻权进程或轻量级进程，也是 CPU 调度的一个基本单位。线程之间共用一个进程的内存空存空间。通常在一个进程中可以包含若干个线程，它们可以利用进程所拥有的资源。（线程之间共用一个进程的内存空存空间）在引入线程的操作系统中，通常都是把进程作为分配资源的基本单位，而把线程作为独立运行和独立调度的基本单位。由于线程比进程更小，基本上不拥有系统资源，故对它的调度所付出的开销就会小得多，能更高效的提高系统内多个程序间并发执行的程度。53.并发和并行的区别是什么？并发是指两个任务都请求运行，而处理器只能按受一个任务，就把这两个任务安排轮流进行，由于时间间隔较短，使人感觉两个任务都在运行。并行就是两个任务同时运行，就是甲任务进行的同时，乙任务也在进行。(需要多核CPU)]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java基础</tag>
        <tag>Java常见面试题</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[酸酸乳ssr教程与免费节点分享]]></title>
    <url>%2FShadowsocksRjc%2F</url>
    <content type="text"><![CDATA[因为某些原因大陆网民无法访问一些国外的网站，给一些朋友的工作或者是生活造成不便，这篇文章介绍的ShadowSocksR酸酸乳（SSR）就可以很好地解决这个问题，并且简单快捷两步搞定！。ssr节点、免费酸酸乳ssr节点、ssr安卓、ssr节点分享、ssr酸酸乳apk下载、小火箭安装方法、美区id、MAC版酸酸乳下载、ShadowsocksX-NG-R、Shadowrocket免费节点、shadowrocket小火箭免费节点分享、高质量ssr节点分享、酸酸乳搭建（文章底部）。本文中不定期更新免费节点！！！ 见文章结尾处~(adsbygoogle=window.adsbygoogle||[]).push({})1.安装客户端并导入节点配置信息所有的客户端软件都是在网上找的，当然也可以用自己的支持ssr的客户端。1.1 Windows用户下载地址：点击下载windows客户端 提取码：8jos 解压密码：www.lee1224.com下载好后只需解压即可，双击打开ShadowsocksR-dotnet4.0.exe程序，该程序打开后可以在任务栏中找到。打开程序后，复制ssr配置信息，鼠标右击小飞机图标，选择从剪切板 “导入ssr://链接”。导入之后别忘了切换成刚导入的节点哦。搞定！打开浏览器输入www.google.com1.2 安卓用户下载地址：点击下载安卓客户端 提取码：8jos 解压密码：www.lee1224.comapk文件直接安装即可。安装完成后复制ssr配置信息，进入小飞机软件，点击左上角的字样进入节点编辑列表，在点击右下角的加号选择从剪切板导入配置信息，导入成功后点选节点，然后点击小飞机按钮连接即可。Done！打开浏览器输入www.youtube.com开始冲浪1.3 IOS用户苹果手机需要到Taobao上租赁美区苹果id。美区App Store下载shadowrocket。需要租用美区id（8元）可以添加vx:Dracula–_–。使用方式与安卓类似。先复制ssr链接，直接进入软件，会自动弹出从剪切板导入节点提示框，确定即可。添加好后打开连接按钮即可开始冲浪~也可以扫描二维码导入配置。1.4 MAC用户使用发方与windows类似。导入方式有剪切板的扫描屏幕二维码导入两种。点击下载MAC版小飞机 (adsbygoogle=window.adsbygoogle||[]).push({})同时本站广告赞助商也提供了很多优质可用的xx软件服务，欢迎试用2.免费测试节点（不定期更新）(adsbygoogle=window.adsbygoogle||[]).push({})点击跳转到一只老菜鸡免费共享节点获取页面点击跳转到福哥的免费共享节点获取页面如果能用的话别忘了到文章底部点一下打赏按钮哦 嘻嘻 每当打赏累计到达50元（服务器租赁费用）的时候 我就会更新一个更好用的节点哦。3.高质量节点:(adsbygoogle=window.adsbygoogle||[]).push({})同时也推荐学习自己搭建节点，真正的独享，速度流量稳定性安全性都是最棒的。自力更生再也不用辛苦寻找节点看别人脸色上网了。这里有一个我再网上收集整理的搭建酸酸乳小教程点击进入《搭建酸酸乳小实验》欢迎大家订阅我的频道(youtube)欢迎大家订阅我的频道(bilibili)]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>ShadowSocksR</tag>
        <tag>ShadowsocksX-NG-R</tag>
        <tag>酸酸乳</tag>
        <tag>ssr</tag>
        <tag>ssr节点</tag>
        <tag>ShadowRocket</tag>
        <tag>小火箭</tag>
        <tag>小飞机</tag>
        <tag>酸酸乳ssr免费节点分享</tag>
        <tag>酸酸乳ssr教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[群晖nas下docker安装百度网盘不限速下载工具]]></title>
    <url>%2Fnaspanbaidu%2F</url>
    <content type="text"><![CDATA[黑群晖安装了docker套件以后，安装一个docker-baiduupcs，就可以实现群晖nas远程高速下载。不用会员也可以跑满宽带不限速。美滋滋~文章最后一章还有通过VPN方式远程访问局域网里的ikuai、lede、nas的方法无需端口映射！！点击查看最新远程不限速下载方式《软路由pve虚拟机安装ikuai+lede+黑群晖DSM》(adsbygoogle=window.adsbygoogle||[]).push({})这篇文章内容均为视频教程的解说版比较简洁，如果看不明白请看移步查看详细视频教程。点击查看详细视频教程欢迎大家订阅我的频道(youtube)点击查看详细视频教程欢迎大家订阅我的频道(bilibili)1.首先安装docker套件直接在套件中心搜索docker安装就ok。2.下载并设置docker-baiduupcs在docker界面点到注册表搜索auska右击下载对应映像下载好以后启动映像，点选高级设置在共享文件夹内新增一个文件夹用来储存从百度网盘上下载的文件。我这设置的是一个名为panbaidu的文件夹。添加文件加设置装载路径。设置端口方便做映射。启动，浏览器输入群晖ip+本地端口。网页登录百度网盘。点击容器详情，在终端机新增一个bash窗口。把根目录下的panbaidu文件夹权限修改为所有用户可读可写chmod 777 panbaidu/修改下载目录，吧下载目录修改成之前挂载的目录。done！3.设置端口映射实现远程访问这个部分只讲思路，方法不唯一，详情看视频操作。首先需要一个动态域名，让域名解析到本地ip。ikuai或者lede或者群晖docker里安装解析域名的容器都可以实现这个功能。然后在路由器，中设置端口映射，把对应的群晖的局域网ip的某个端口暴露给外网。这样就可以实现外网访问。动态域名的作用是为了让你可以在ip变动的情况下，可以通过固定的域名来访问。4.不用端口映射远程访问的方法。首先在ikuai的认证计费中的本地认证服务开启PPTP服务端，开启就行啥都不用改。然后再到认证账号管理中添加用户然后在别的设备上使用vpn连接到该网络，然后就可以通过局域网ip来远程访问了。以手机为例：然后连接。又done！]]></content>
      <categories>
        <category>搞机</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>nas</tag>
        <tag>DSM</tag>
        <tag>黑群晖</tag>
        <tag>百度网盘不限速下载</tag>
        <tag>BaiduPCS-Go</tag>
        <tag>nas远程高速下载</tag>
        <tag>端口映射</tag>
        <tag>远程访问局域网设备</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[软路由pve虚拟机安装ikuai+lede+黑群晖DSM]]></title>
    <url>%2Fruanluyou%2F</url>
    <content type="text"><![CDATA[最近入手了一台3865u工控机用来做软路由，看了不少大神的视频查阅了无数资料，然后自己折腾一番以后安装配置好了双软路由ikuai+lede+NAS。ikuai用来拨号控流等、lede负责接AP等拓展（安装了koolss、v2ray等酷软中心已经下架的插件）、黑群晖也可以内网千兆传输隐藏启动盘启用硬盘自动休眠等功能还有黑群晖远程高速下载bt等资源的可行方案！这篇文章内容均为视频教程的解说版比较简洁，如果看不明白请看移步查看详细视频教程。点击查看详细视频教程欢迎大家订阅我的频道(youtube)点击查看详细视频教程欢迎大家订阅我的频道(bilibili)(adsbygoogle=window.adsbygoogle||[]).push({})1.首先来介绍一下软路由软路由就是用软件模拟路由器的功能，软路由软件可以实现和正常路由器相似的功能，涵盖流量控制、上网行为管理、路由器、防火墙等众多技术和功能。我手里这台软路由有6个因特尔千兆网口，1个HDMI接口，4个usb接口、4G内存32G固态硬盘。内置一个sata接口我又添加了一块闲置的机械硬盘用来做群晖的储存盘。在选择软路由工控机的时候可以对照下这个表格。2.安装设置pve系统首先在这里下载镜像https://www.proxmox.com/en/downloads然后再写入U盘，最后把U盘插入工控机。使用HDMI接线把工控机和显示器连接起来。开机时按del键，进入bios设置从U盘启动就可以自动安装了，跟电脑装系统是一样的哦。自己安装的小伙伴注意在bios中设置成UEFI引导模式。U盘启动后按照提示安装就行啦。安装时还需要设置网卡（我设置的是enp1s0，对应第一个物理网口）ip和网关。我这里设置的pve管理页面ip是10.10.10.2网关填写的是爱快的地址10.10.10.1，后面我们会用爱快的DHCP来分配内网ip。设置好安装完成之后就可以通过PC来连接到pve的管理页面，但是要注意，首先需要把电脑的地址和网关修改一下，否则无法连接。地址：10.10.10.66（最后一段可以在5-254之间随意填写） 网关：10.10.10.1使用网线连接1号网口和电脑就可以通过设置的ip访问啦。2.1设置桥接在浏览器输入https://10.10.10.2:8006进入到pve管理页面。跟物理网口一一对应如图设置好。3.安装爱快ikuai3.1下载安装镜像我这安装的是64位的。可以根据自己需求来下载。https://www.ikuai8.com/component/download3.2上传镜像这里介绍一下这两个东西，local是专门用来存放镜像文件的，可以从本地上传到工控机（pve系统所在的机器）中进行安装，而local-lvm是用来存储虚拟机文件的地方。然后点入local选择内容，点击上传，把下载好的镜像文件上传到pve系统中。3.3创建虚拟机首先右击节点，点选创建虚拟机。设置虚拟机id和虚拟机名称。 选择启动安装镜像。后面的配置可以根据我这张图来配置。3.4添加网络设备在创建虚拟机的过程中我们已经创建了一个虚拟网卡，但是我们还需要一个网口来作为ikuai的wan口也就是插入网线的接口。选中刚刚创建的虚拟机，点选添加网络设备。为了便于区分我添加了最后一个网口（对应物理网口的最后一个接口）。这样就很清楚了，net0（对应第一个网口）作为爱快的lan口，net1（对应最后一个网口）作为爱快的wan口用来插入网线进行拨号。3.5启动虚拟机安装ikuai点击启动按钮打开控制台就可以看到安装界面，按照提示安装即可。当你看到ikuai字样是说明已经安装完毕。点击键盘回车键就可以看到菜单。然后需要设置lan口的ip，让我们可以自由地从浏览器访问ikuai管理界面。3.6在浏览器输入ikuai的web管理地址就可以进入管理页面啦。进入管理页面以后把wan口和虚拟机中添加的net1虚拟网卡绑定一下，然后设置一下拨号和DNS就好啦。其余的选项保持默认就好。这里我们希望使用ikuai来分配ip所以要配置DHCP服务器。网关填写lede的地址。3.7设置自动拨号首先把wan口和我们事先设置好的网卡进行绑定。然后插入网线选择上网方式就Ok拉。先保存再拨号。4.安装lede这里需要用到ios工具把lede安装镜像封装到ios中，然后在虚拟机中用该iso启动，然后使用转换工具把lede镜像转换并写入到虚拟机的硬盘中。怎么封装我就不演示了，直接上镜像（pe-lede-pve.ISO）。有需要的朋友可以自己去百度下怎么封装。封装好的：镜像下载地址：链接：https://pan.baidu.com/s/1DJvcC7dXanTU-Ntw8QU9yQ 提取码：bjph安装过程和安装爱快类似。要注意的地方就是创建虚拟机加载pe-lede-pve.ISO镜像后还需要把这个地方需要修改一下。安装成功之后可以改回来。4.1在pe中把lede镜像写到虚拟机磁盘中启动pe在cd驱动器中的tool文件夹中找到斜盘工具开始写盘。完成后点关机。4.2设置ip和网口要在lede虚拟机中添加网络设备，把除了最后一个给爱快用来当wan口的网口，全部按顺序添加一便。然后启动虚拟机自动安装lede，安装好后还需要修改一下lede的ip便于访问。控制台输入命令：1vi /etc/config/network修改如图所示位置：然后先按ESC键再输入（冒号）:wq回车保存并退出，然后再输入命令reboot重启虚拟机应用修改。浏览器输入lede地址10.10.10.3进入lede管理页面默认密码koolshare。然后设置网络接口，因为我们是使用ikuai来拨号所以并不需要wan口删除wan口。把所有的接口都绑定到lan口。这样设置以后在软路由机器上的其他网口接入设备就能直接上网啦。例如接入新的电脑网线，接入AP。设置DNS，否则无法解析ip酷软中心无法更新。DHCP服务器设置，高级设置勾选强制。4.3升级lede当我们进入到酷软中心的时候，就会提示升级。待升级完成然后在未安装中找到固件升级插件，安装。然后再点击固件升级来升级固件。(adsbygoogle=window.adsbygoogle||[]).push({})4.4安装科学上网koolss+koolproxy+wireguard+v2ray等酷软中心没有的插件首先下载插件，下载地址：https://pan.baidu.com/s/1DJvcC7dXanTU-Ntw8QU9yQ 提取码：bjph以koolss为例：把插件上传到lede系统中。这里我选择使用scp命令来上传。windows用户可以使用gitbash来执行linux命令。下载地址：https://gitforwindows.org/首先来到插件目录然后在此打开gitbash12# 命令解析 scp 本地文件名 登录账户@服务器地址:目标目录scp koolss.tar.gz root@10.10.10.3:/tmp然后在gitbash中使用ssh登录到lede系统转到/tmp目录下12ssh root@10.10.10.3cd /tmp登录进去之后可以使用ls命令查看当前目录下的文件，然后解压刚上传的koolss插件1tar -zxvf koolss.tar.gz给解压出来的install.sh文件提权让其可以执行1chmod +x koolss/install.sh最后执行该文件安装该插件1sh koolss/install.sh执行命令之后就可以直接去酷软中心刷新已安装点击使用该插件了。5.安装黑群晖5.1创建虚拟机创建过程跟上面类似，只是创建完成后需要把磁盘分离然后删除。这里我们不需要创建磁盘，因为后面需要手动创建引导磁盘，手动把物理机械硬盘增加到虚拟机上。5.2下载引导文件synoboot.img和转换工具img2kvm创建导入虚拟磁盘文件下载地址链接：https://pan.baidu.com/s/1SRx09eiBYDfQzaI5R2fI7A提取码：bh1e下载好synoboot.img文件后使用scp命令上传到pve系统。然后使用 chmod +x img2kvm 命令让该工具有可执行权限。接下来就使用该工具把引导文件转换成DSM虚拟机的磁盘文件。1./img2kvm synoboot.img 102 vm-102-disk-0执行完该命令以后再到虚拟机中查看就多了一个未使用的磁盘，双击应用设置为sata0。然后再使用命令查看硬盘id找到我们需要的机械硬盘id并复制下来。1ls -l /dev/disk/by-id/ 然后在用这条命令把该磁盘添加到虚拟机中1qm set 102 --sata1 /dev/disk/by-id/硬盘id5.3安装设置DSM系统最后启动DSM虚拟机。启动完成以后在浏览器输入http://find.synology.com 来查找局域网的DSM系统，然后按提示安装就行了。安装好后首先在网络中修改一下设置为一个固定的内网ip方便访问。还要做的就是添加存储空间，这个可以根据提示来，或者照着我的视频来做也是可以的。6.隐藏黑裙启动盘设置硬盘自动休眠首先关闭DSM虚拟机分离所有磁盘。重新添加一遍，启动盘设置为sata4，机械硬盘设置为sata0。再把machine修改为q35。然后添加一个cd启动项CD/DVD驱动器，把Win10PE_17763.107x64__.iso上传加载进去，在选项中修改引导顺序，从CD/DVD驱动器启动。使用pe系统来修改DSM系统的grub.cfg 文件。使用磁盘工具找到这个文件的32行左右修改为1set sata_args='DiskIdxMap=1000 SataPortMap=24'# 将两项加在这后面（10，00都为16进制）修改好之后把启动顺序修改为从sata4为第一启动项，然后启动。到这里就隐藏了启动盘。开机后在设置中设置硬盘自动休眠计划。最后再到pve的shell中执行命令关闭状态检查，因为这样会经常唤醒休眠硬盘，然后再设置一下硬盘休眠。12pvestatd stop # 停用该服务无法新建虚拟机，需要时使用pvestatd start开启hdparm -S 240 /dev/需要休眠的硬盘 # 20分钟 240/12=20停用pvestatd服务后pve无法更新状态但是不影响使用done！7.黑裙高速离线下载方式点击查看最新远程不限速下载方式《群晖nas下docker安装百度网盘不限速下载工具》群晖的download station下载速度实在不敢恭维。本想用docker安装迅雷等工具来安装，无奈可能是因为我家移动宽带的问题搜索不出hub里面的东西，不过据说迅雷也不给第三方远程下载好脸色了之照顾自己的和几个大厂的盒子，正好咱也不稀罕。这个方法其实很简单，原理就是利用网盘同步来下载。套件中心安装Cloud sync然后设置同步百度原…之后的同步一下文件夹，百度网盘的应用数据文件加中就会多出一个Cloud sync文件加就是同步的文件夹。只要把电影放进去就可以自动下载到本地！！！亲测开启百度网盘会员会员可以跑满宽带！！！超快。而且基本上一些电影都有百度网盘资源只要转存到同步文件夹就会自动下载到本地拉。而且百度网盘还有离线下载，直接新建离线任务，直接把小电影下载到网盘中的哪个同步文件加，待下载好后，就会自动同步到本地咯！是不是很棒！8.pve解决更新出错问题删除这个源1rm -f /etc/apt/sources.list.d/pve-enterprise.list打开源列表1vi /etc/apt/sources.list添加这条1deb http://download.proxmox.com/debian stretch pve-no-subscription添加这条123echo "deb http://download.proxmox.com/debian/pve stretch pve-no-subscription" &gt; /etc/apt/sources.list.d/pve-install-repo.listwget http://download.proxmox.com/debian/proxmox-ve-release-5.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-5.x.gpgwget http://download.proxmox.com/debian/proxmox-ve-release-6.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg如果提示不能间解析域名的话就添加一下DNS1vi /etc/resolv.conf添加：12nameserver 114.114.114.114nameserver 223.5.5.5使用命令：apt update &amp;&amp; apt dist-upgrade更新或者在pve网页管理页面点击更新]]></content>
      <categories>
        <category>搞机</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>DSM</tag>
        <tag>黑群晖</tag>
        <tag>软路由</tag>
        <tag>ikuai</tag>
        <tag>lede</tag>
        <tag>黑裙</tag>
        <tag>koolss</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Firewall和ssh安全设置 修改ssh默认端口 设置key密钥登录 添加防火墙规则]]></title>
    <url>%2FsshandFirewall%2F</url>
    <content type="text"><![CDATA[使用Linux服务器的时候经常会遇到22端口被爆破的情况，这时候我们就可以通过修改ssh默认端口添加密钥登录并放行新的ssh端口。来让我们的服务器更加安全。(adsbygoogle=window.adsbygoogle||[]).push({})查看爆破次数记录1cat /var/log/secure | awk '/Failed/&#123;print $(NF-3)&#125;' | sort | uniq -c | awk '&#123;print $2" = "$1;&#125;'1. Firewall防火墙设置1.1 开启端口1firewall-cmd --zone=public --add-port=80/tcp --permanent命令含义：–zone #作用域–add-port=80/tcp #添加端口，格式为：端口/通讯协议–permanent #永久生效，没有此参数重启后失效1.2 重启防火墙1firewall-cmd --reload1.3 常用命令介绍1234567891011121314firewall-cmd --state ##查看防火墙状态，是否是runningfirewall-cmd --reload ##重新载入配置，比如添加规则之后，需要执行此命令firewall-cmd --get-zones ##列出支持的zonefirewall-cmd --get-services ##列出支持的服务，在列表中的服务是放行的firewall-cmd --query-service ftp ##查看ftp服务是否支持，返回yes或者nofirewall-cmd --add-service=ftp ##临时开放ftp服务firewall-cmd --add-service=ftp --permanent ##永久开放ftp服务firewall-cmd --remove-service=ftp --permanent ##永久移除ftp服务firewall-cmd --add-port=80/tcp --permanent ##永久添加80端口 iptables -L -n ##查看规则，这个命令是和iptables的相同的firewall-cmd --list-all ##查看防火墙规则man firewall-cmd ##查看帮助更多命令，使用 firewall-cmd --help 查看帮助文件2. 修改ssh默认端口2.1 修改SSH服务器配置文件1vim /etc/ssh/sshd_config把注释去掉，然后修改为想要的端口。2.2 ssh连接指定端口1ssh -p 2222 root@xxx.xxx.xxx.xxx如果修改客户端配置文件 /etc/ssh/config_ssh把Port改成2222，则连接ssh服务器时默认连接的端口为22223. 使用key密钥登录禁用ssh密码登录3.1 启用key密钥登录请参考本站另一篇文章的第三章节《Nginx搭建hexo博客》设置好后就可以直接通过key登录啦，密码都不用输，太方便了。3.2 禁用ssh密码登录1vim /etc/ssh/sshd_config推荐一个超级好用安全可靠还便宜的国外vps点击图片注册送50美元体验金！]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ssh</tag>
        <tag>Firewall</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用scrollreveal.js给网站添加滑动动态效果]]></title>
    <url>%2Fscrollrevealjs%2F</url>
    <content type="text"><![CDATA[ScrollReveal是一个JavaScript库，用于在元素进入/离开视区时轻松设置其动画。它的设计是坚固和灵活的，但你会惊讶于它是多么容易使用。(adsbygoogle=window.adsbygoogle||[]).push({})这篇文章是在上一篇篇文章《使用bootstrap3样式制作一个炫酷的网页》基础上添加动态效果。点击下面的链接浏览上一篇文章。《使用bootstrap3样式制作一个炫酷的网页》1. 安装使用ScrollReveal源码仓库可以直接下载js代码引入来使用也可以直接使用CDN，本文中选择的是下载js文件本地引入的方法。具体请点击上部连接参考官方说明。在head标签中引入scrollreveal.js ~点击查看完整版代码1&lt;script src="js/scrollreveal.min.js"&gt;&lt;/script&gt;2.对不同的元素设置不同的动态效果对不同的元素设置不同的动态效果 ~点击查看完整版代码1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;script&gt; window.sr = ScrollReveal(); sr.reveal('.navbar', &#123; duration: 2000, // 动态效果持续时间 2000 就是2秒 origin: 'bottom' // 从哪个方向滑动过来 &#125;); sr.reveal('.showcase-left', &#123; duration: 2000, origin: 'top', distance: '300px' // 滑动距离 &#125;); sr.reveal('.showcase-right', &#123; duration: 2000, origin: 'right', distance: '300px' &#125;); sr.reveal('.showcase-right', &#123; duration: 2000, origin: 'right', distance: '300px' &#125;); sr.reveal('.showcase-btn', &#123; duration: 2000, delay: 2000, // 特效延迟显示的时间 origin: 'bottom', distance: '300px' &#125;); sr.reveal('#testimonial div', &#123; duration: 2000, origin: 'bottom' &#125;); sr.reveal('.info-left', &#123; duration: 2000, origin: 'left', distance: '300px', viewFactor: 0.3 // 指定滚动到百分之几时才显示出来 &#125;); sr.reveal('.info-right', &#123; duration: 2000, origin: 'right', distance: '300px', viewFactor: 0.3 &#125;);&lt;/script&gt;3.Smooth Scrolling 鼠标点击导航栏超链接顺滑定位到指定位置Smooth Scrolling 鼠标点击导航栏超链接顺滑定位到指定位置 ~点击查看完整版代码1234567891011121314151617&lt;script&gt; // Smooth Scrolling 鼠标点击导航栏超链接顺滑定位到指定位置 $(function () &#123; $('a[href*="#"]:not([href="#"])').click(function () &#123; if (location.pathname.replace(/^\//, '') == this.pathname.replace(/^\//, '') &amp;&amp; location.hostname == this.hostname) &#123; var target = $(this.hash); target = target.length ? target : $('[name=' + this.hash.slice(1) + ']'); if (target.length) &#123; $('html, body').animate(&#123; scrollTop: target.offset().top &#125;, 1000); return false; &#125; &#125; &#125;); &#125;);&lt;/script&gt;视频教程地址]]></content>
      <categories>
        <category>Web-Development</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
        <tag>bootstrapDemo</tag>
        <tag>scrollreveal.js</tag>
        <tag>滚动动态效果</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用bootstrap3样式制作一个炫酷的网页]]></title>
    <url>%2Fsimplebspage%2F</url>
    <content type="text"><![CDATA[使用bootstrap就可以很快制作出一个这样的网页(adsbygoogle=window.adsbygoogle||[]).push({})如果你对bootstrap一窍不通请先浏览本站的上一篇文章。《Bootstrap基础》1.导航栏navbar 导航栏 ~点击查看完整版代码12345678910111213141516171819202122&lt;nav class="navbar navbar-default navbar-fixed-top"&gt; &lt;div class="container"&gt; &lt;div class="navbar-header"&gt; &lt;!-- 小屏幕例如手机打开时 显示精简响应式导航栏 --&gt; &lt;button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar"&gt; &lt;span class="sr-only"&gt;Toggle navigation&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;span class="icon-bar"&gt;&lt;/span&gt; &lt;/button&gt; &lt;a class="navbar-brand" href="#"&gt;DP LEE&lt;/a&gt; &lt;/div&gt; &lt;div id="navbar" class="collapse navbar-collapse"&gt; &lt;ul class="nav navbar-nav navbar-right"&gt; &lt;li&gt;&lt;a href="#showcase"&gt;Home&lt;/a&gt;&lt;/li&gt; &lt;!-- 可直接定位到指定的id元素 --&gt; &lt;li&gt;&lt;a href="#info1"&gt;About&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!--/.nav-collapse --&gt; &lt;/div&gt;&lt;/nav&gt;navbar 导航栏 自定义样式 style.css ~点击查看完整版代码1234567891011.navbar-default &#123; background: #fff; border: 0; font-family: Poppins;&#125;.navbar-brand &#123; font-size: 20px; color: #000 !important; font-weight: bold;&#125;2. showcase 展示区域showcase 展示区 ~点击查看完整版代码1234567891011121314151617181920&lt;section id="showcase"&gt; &lt;div class="container"&gt; &lt;div class="row"&gt; &lt;div class="col-md-6 col-sm-6"&gt; &lt;div class="showcase-left"&gt; &lt;img src="img/image1.jpg"&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="col-md-6 col-sm-6"&gt; &lt;div class="showcase-right"&gt; &lt;h1&gt;Bootstrap starter template&lt;/h1&gt; &lt;p&gt;Use this document as a way to quickly start any new project. All you get is this text and a mostly barebones HTML document.&lt;/p&gt; &lt;/div&gt; &lt;br&gt; &lt;a class="btn btn-lg btn-default showcase-btn"&gt;Read More&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt;showcase 展示区 自定义样式 style.css ~点击查看完整版代码12345678910111213#showcase h1&#123; font-size: 50px; margin-bottom: 20px;&#125;#showcase img&#123; width: 90%; margin-left: 60px;&#125;#showcase .showcase-right&#123; margin-top: 90px;&#125;3.testimonial 文字介绍版块testimonial 文字介绍版块 ~点击查看完整版代码1234567&lt;section id="testimonial"&gt; &lt;div class="container"&gt; &lt;p&gt;"Build on the basic template above with Bootstrap's many components. We encourage you to customize and adapt Bootstrap to suit your individual project's needs."&lt;/p&gt; &lt;p class="customer"&gt;- DP LEE&lt;/p&gt; &lt;/div&gt;&lt;/section&gt;testimonial 文字介绍版块 自定义样式 style.css ~点击查看完整版代码1234567891011121314151617#testimonial&#123; background: #f1f1f1; padding: 50px 0 30px 0; text-align: center; margin-top: 40px;&#125;#testimonial p&#123; font-size: 32px; font-family: "Josefin Sans"; color: #000;&#125;#testimonial p.customer&#123; font-size: 20px; color: #666;&#125;4.info 详细信息展示板块info 详细信息展示板块 ~点击查看完整版代码123456789101112131415161718192021222324252627282930313233343536373839404142434445&lt;section id="info1"&gt; &lt;div class="container"&gt; &lt;div class="row"&gt; &lt;div class="col-md-6 col-sm-6"&gt; &lt;div class="info-left"&gt; &lt;img src="img/image2.png"&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="col-md-6 col-sm-6"&gt; &lt;div class="info-right"&gt; &lt;h2&gt;Get To Know Home&lt;/h2&gt; &lt;p&gt;Bootstrap is built to work best in the latest desktop and mobile browsers, meaning older browsers might display differently styled, though fully functional, renderings of certain components.&lt;/p&gt; &lt;br&gt; &lt;a class="btn btn-default btn-lg"&gt;Read More&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt;&lt;hr&gt;&lt;section id="info2"&gt; &lt;div class="container"&gt; &lt;div class="row"&gt; &lt;div class="col-md-6 col-sm-6"&gt; &lt;div class="info-left"&gt; &lt;h2&gt;Info Block One&lt;/h2&gt; &lt;p&gt;Bootstrap is built to work best in the latest desktop and mobile browsers, meaning older browsers might display differently styled, though fully functional, renderings of certain components.&lt;/p&gt; &lt;br&gt; &lt;a class="btn btn-default btn-lg"&gt;Read More&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="col-md-6 col-sm-6"&gt; &lt;div class="info-right"&gt; &lt;h2&gt;Info Block Two&lt;/h2&gt; &lt;p&gt;Bootstrap is built to work best in the latest desktop and mobile browsers, meaning older browsers might display differently styled, though fully functional, renderings of certain components.&lt;/p&gt; &lt;br&gt; &lt;a class="btn btn-default btn-lg"&gt;Read More&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt;info 详细信息展示板块 自定义样式 style.css ~点击查看完整版代码1234567#info1 .info-right&#123; margin-top: 90px;&#125;#info2&#123; margin: 20px 0 60px 0;&#125;5.底部联系我们和版权信息底部联系我们和版权信息 ~点击查看完整版代码123456789101112131415161718192021222324252627282930&lt;section id="contact"&gt; &lt;div class="container"&gt; &lt;div class="row"&gt; &lt;div class="col-md-5 col-xs-5"&gt; &lt;form&gt; &lt;div class="form-group"&gt; &lt;label&gt;Name: &lt;/label&gt; &lt;input class="form-control" type="text" name="" value="" placeholder="Enter Name"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;Email: &lt;/label&gt; &lt;input class="form-control" type="text" name="" value="" placeholder="Enter Email"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label&gt;Message: &lt;/label&gt; &lt;textarea class="form-control" name="" value="" placeholder="Enter Message"&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;button class="btn btn-default"&gt;Submit&lt;/button&gt; &lt;/form&gt; &lt;/div&gt; &lt;div class="col-md-7 col-sm-7"&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/section&gt;&lt;footer&gt; &lt;p class="text-center"&gt;TechScroll Copyright &amp;copy;&lt;/p&gt;&lt;/footer&gt;底部联系我们和版权信息 自定义样式 style.css ~点击查看完整版代码1234567891011#contact&#123; background: url("../img/image3.png"); padding: 40px; color: #fff; border-top: #333 7px solid; border-bottom: #333 7px solid;&#125;footer&#123; padding: 30px;&#125;6.总结整体效果：bootstrap样式可以在自定义样式中进行修改，例如这样就可以修改导航栏中的字体大小和颜色，!important 表示就用这个样式覆盖别的样式。很多组件和javascript相关操作都可以直接在bootstrap文档中查看使用方式，也可以直接复制里面的demo进行修改。下一篇文章将会使用scrollreveal.js来给这格网页添加动态效果，点击下面的链接直接跳转到该文章。《使用scrollreveal.js给网站添加滑动动态效果》]]></content>
      <categories>
        <category>Web-Development</category>
      </categories>
      <tags>
        <tag>bootstrap</tag>
        <tag>bootstrapDemo</tag>
        <tag>navbar</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Bootstrap基础]]></title>
    <url>%2FBootstrapCheatSheet%2F</url>
    <content type="text"><![CDATA[Bootstrap 是最受欢迎的 HTML、CSS 和 JS 框架，用于开发响应式布局、移动设备优先的 WEB 项目。(adsbygoogle=window.adsbygoogle||[]).push({})1.Getting started使用bootstrap的方式主要有下载源文件和引用cdn的方式。具体参考：点击查看bootstrap的使用方式bootstrap.min.css和bootstrap.css在使用上是一样的但是min版时压缩版使用更方便。这里我们选择使用把css文件下载到本地引入的方法来使用。1.1 创建一个html文件并做好使用bootstrap的准备创建一个能使用bootstrap的html页面~点击查看完整版代码12345678910111213141516171819202122232425262728&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt; &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt; &lt;!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags --&gt; &lt;title&gt;一只老菜鸡&lt;/title&gt; &lt;!-- Bootstrap --&gt; &lt;link href="css/bootstrap.min.css" rel="stylesheet"&gt; &lt;!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries --&gt; &lt;!-- WARNING: Respond.js doesn't work if you view the page via file:// --&gt; &lt;!--[if lt IE 9]&gt; &lt;script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"&gt;&lt;/script&gt; &lt;script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"&gt;&lt;/script&gt; &lt;![endif]--&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello, world!&lt;/h1&gt; &lt;!-- jQuery (necessary for Bootstrap's JavaScript plugins) --&gt; &lt;script src="js/jquery.min.js"&gt;&lt;/script&gt; &lt;!-- Include all compiled plugins (below), or include individual files as needed --&gt; &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt; &lt;/body&gt;&lt;/html&gt;使用bootstrap样式前：使用bootstrap样式后：2.TYPOGRAPHY 排版2.1 文本基本操作文本基本操作~点击查看完整版代码12345678910111213141516171819&lt;div class="container"&gt; &lt;!-- container 是bootstrap样式中的容器基本样式 --&gt; &lt;h1 class="page-header"&gt;Hello, world! &lt;small&gt;Secondary text&lt;/small&gt; &lt;/h1&gt; &lt;p class="lead"&gt; Cras mattis &lt;mark&gt;consectetur&lt;/mark&gt; purus &lt;del&gt;sit amet&lt;/del&gt; fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. &lt;/p&gt; &lt;p&gt; Morbi leo risus, porta &lt;u&gt;ac consectetur ac&lt;/u&gt;, vestibulum at eros. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla. &lt;/p&gt;&lt;/div&gt;2.2 ALIGNMENT 对齐 $ TRANSFORMATION 位置变换ALIGNMENT 对齐 $ TRANSFORMATION 位置变换 ~点击查看完整版代码123456&lt;!-- ALIGNMENT 对齐 $ TRANSFORMATION 变换 --&gt;&lt;p class="text-left text-lowercase"&gt;Left aligned&lt;/p&gt; &lt;!-- 文本靠左并转换成小写 --&gt;&lt;p class="text-center text-uppercase"&gt;Center aligned&lt;/p&gt; &lt;!-- 文本居中并转换成大写 --&gt;&lt;p class="text-right text-capitalize"&gt;Right aligned&lt;/p&gt; &lt;!-- 文本靠又并转换成首字母大写 --&gt;&lt;p class="text-justify"&gt;Justified text&lt;/p&gt;&lt;p class="text-nowrap"&gt;No Wrap text&lt;/p&gt;2.3 BLOCKQUOTE 块引用BLOCKQUOTE 块引用 ~点击查看完整版代码1234&lt;blockquote class="blockquote-reverse"&gt; &lt;p&gt;我啥也没说过，我真的啥也没说。&lt;/p&gt; &lt;footer&gt;Quote by &lt;cite title="DP LEE"&gt;DP LEE&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;2.4 CODE 引用代码块CODE 引用代码块 ~点击查看完整版代码12345&lt;code&gt;&amp;lt;h1&amp;gt;Heading Text&amp;lt;/h1&amp;gt;&lt;/code&gt;&lt;br&gt;To switch directories, type &lt;kbd&gt;cd&lt;/kbd&gt;&lt;br&gt;To edit settings, press &lt;kbd&gt;&lt;kbd&gt;ctrl&lt;/kbd&gt; + &lt;kbd&gt;,&lt;/kbd&gt;&lt;/kbd&gt;2.5 文本颜色文本颜色 ~点击查看完整版代码123456789101112131415&lt;!-- CONTEXTUAL COLORS 上下文颜色 --&gt;&lt;p class="text-primary"&gt;Hello World&lt;/p&gt;&lt;p class="text-success"&gt;Hello World&lt;/p&gt;&lt;p class="text-info"&gt;Hello World&lt;/p&gt;&lt;p class="text-warning"&gt;Hello World&lt;/p&gt;&lt;p class="text-danger"&gt;Hello World&lt;/p&gt;&lt;p class="text-muted"&gt;Hello World&lt;/p&gt; &lt;!--muted 暗淡的 --&gt;&lt;!-- CONTEXTUAL BACKGROUND COLORS 上下文背景颜色 --&gt;&lt;p class="bg-primary"&gt;Hello World&lt;/p&gt;&lt;p class="bg-success"&gt;Hello World&lt;/p&gt;&lt;p class="bg-info"&gt;Hello World&lt;/p&gt;&lt;p class="bg-warning"&gt;Hello World&lt;/p&gt;&lt;p class="bg-danger"&gt;Hello World&lt;/p&gt;&lt;p class="bg-muted"&gt;Hello World&lt;/p&gt; &lt;!--muted 暗淡的 --&gt;2.6 LABELS标签LABELS标签 ~点击查看完整版代码123456&lt;span class="label label-default"&gt;Default&lt;/span&gt;&lt;span class="label label-primary"&gt;Primary&lt;/span&gt;&lt;span class="label label-success"&gt;Success&lt;/span&gt;&lt;span class="label label-info"&gt;Info&lt;/span&gt;&lt;span class="label label-warning"&gt;Warning&lt;/span&gt;&lt;span class="label label-danger"&gt;Danger&lt;/span&gt;3.按钮3.1 基本按钮基本按钮 ~点击查看完整版代码12345678910111213&lt;button class="btn btn-default"&gt;Button&lt;/button&gt;&lt;a href="#" class="btn btn-danger" role="button"&gt;Link&lt;/a&gt;&lt;input type="submit" class="btn btn-success" value="Submit"&gt;&lt;br&gt;&lt;!-- STANDARD BUTTON --&gt;&lt;button type="button" class="btn btn-default"&gt;Default&lt;/button&gt;&lt;button type="button" class="btn btn-primary"&gt;Primary&lt;/button&gt;&lt;button type="button" class="btn btn-success"&gt;Success&lt;/button&gt;&lt;button type="button" class="btn btn-info"&gt;Info&lt;/button&gt;&lt;button type="button" class="btn btn-warning"&gt;Warning&lt;/button&gt;&lt;button type="button" class="btn btn-danger"&gt;Delete&lt;/button&gt;&lt;button type="button" class="btn btn-link"&gt;Link&lt;/button&gt;3.2 BUTTON SIZE 按钮大小BUTTON SIZE 按钮大小 ~点击查看完整版代码12345678910111213141516&lt;p&gt; &lt;button type="button" class="btn btn-primary btn-lg"&gt;Large button&lt;/button&gt; &lt;button type="button" class="btn btn-default btn-lg"&gt;Large button&lt;/button&gt;&lt;/p&gt;&lt;p&gt; &lt;button type="button" class="btn btn-primary"&gt;Default button&lt;/button&gt; &lt;button type="button" class="btn btn-default"&gt;Default button&lt;/button&gt;&lt;/p&gt;&lt;p&gt; &lt;button type="button" class="btn btn-primary btn-sm"&gt;Small button&lt;/button&gt; &lt;button type="button" class="btn btn-default btn-sm"&gt;Small button&lt;/button&gt;&lt;/p&gt;&lt;p&gt; &lt;button type="button" class="btn btn-primary btn-xs"&gt;Extra small button&lt;/button&gt; &lt;button type="button" class="btn btn-default btn-xs"&gt;Extra small button&lt;/button&gt;&lt;/p&gt;3.3 BLOCK BUTTON 按钮块BUTTON SIZE 按钮大小 ~点击查看完整版代码1234&lt;div style="height: 100px; width: 400px;"&gt; &lt;button type="button" class="btn btn-primary btn-lg btn-block"&gt;Block level button&lt;/button&gt; &lt;button type="button" class="btn btn-default btn-lg btn-block"&gt;Block level button&lt;/button&gt;&lt;/div&gt;4.FORM 表单4.1 block表单（一栏一行）block表单（一栏一行） ~点击查看完整版代码1234567891011121314151617181920212223242526272829&lt;form class="form-group"&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputEmail1"&gt;Email address&lt;/label&gt; &lt;input type="email" class="form-control" id="exampleInputEmail1" placeholder="Email"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputPassword1"&gt;Password&lt;/label&gt; &lt;input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="select1"&gt;Gender&lt;/label&gt; &lt;select class="form-control" id="select1"&gt; &lt;option value="male"&gt;Male&lt;/option&gt; &lt;option value="female"&gt;Female&lt;/option&gt; &lt;option value="other"&gt;Other&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputFile"&gt;File input&lt;/label&gt; &lt;input type="file" id="exampleInputFile"&gt; &lt;p class="help-block"&gt;Example block-level help text here.&lt;/p&gt; &lt;/div&gt; &lt;div class="checkbox"&gt; &lt;label&gt; &lt;input type="checkbox"&gt; Check me out &lt;/label&gt; &lt;/div&gt; &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;&lt;/form&gt;4.2 inline表单（一行可以有多栏）inline表单（一行可以有多栏） ~点击查看完整版代码1234567891011121314151617181920212223242526272829&lt;form class="form-inline form-group-sm"&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputEmail2"&gt;Email address&lt;/label&gt; &lt;input type="email" class="form-control" id="exampleInputEmail2" placeholder="Email"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputPassword2"&gt;Password&lt;/label&gt; &lt;input type="password" class="form-control" id="exampleInputPassword2" placeholder="Password"&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="select2"&gt;Gender&lt;/label&gt; &lt;select class="form-control" id="select2"&gt; &lt;option value="male"&gt;Male&lt;/option&gt; &lt;option value="female"&gt;Female&lt;/option&gt; &lt;option value="other"&gt;Other&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;div class="form-group"&gt; &lt;label for="exampleInputFile2"&gt;File input&lt;/label&gt; &lt;input type="file" id="exampleInputFile2"&gt; &lt;p class="help-block"&gt;Example block-level help text here.&lt;/p&gt; &lt;/div&gt; &lt;div class="checkbox"&gt; &lt;label&gt; &lt;input type="checkbox"&gt; Check me out &lt;/label&gt; &lt;/div&gt; &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt;&lt;/form&gt;5.TABLE 表格TABLE 表格 ~点击查看完整版代码12345678910111213141516171819202122&lt;table class="table table-hover table-striped table-bordered table-condensed"&gt; &lt;!--condensed 缩小--&gt; &lt;tr&gt; &lt;td class="active"&gt;First Name&lt;/td&gt; &lt;td class="success"&gt;Last Name&lt;/td&gt; &lt;td class="warning"&gt;Age&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;DP&lt;/td&gt; &lt;td&gt;LEE&lt;/td&gt; &lt;td&gt;22&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Yanyan&lt;/td&gt; &lt;td&gt;Liao&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;/tr&gt; &lt;tr class="danger"&gt; &lt;td&gt;Yanyan&lt;/td&gt; &lt;td&gt;Lee&lt;/td&gt; &lt;td&gt;20&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;6.LIST GROUP 列表组LIST GROUP 列表组 ~点击查看完整版代码12345678910111213&lt;ul class="list-group"&gt; &lt;li class="list-group-item"&gt;Item one&lt;/li&gt; &lt;li class="list-group-item"&gt;Item Two&lt;/li&gt; &lt;li class="list-group-item"&gt;Item Three&lt;/li&gt; &lt;li class="list-group-item"&gt;Item Four&lt;/li&gt;&lt;/ul&gt;&lt;div class="list-group"&gt; &lt;a href="#" class="list-group-item active"&gt;Link one&lt;/a&gt; &lt;a href="#" class="list-group-item list-group-item-success"&gt;Link Tow&lt;/a&gt; &lt;a href="#" class="list-group-item"&gt;Link Four&lt;/a&gt; &lt;a href="#" class="list-group-item disabled"&gt;Link Five&lt;/a&gt;&lt;/div&gt;7.PANELS 面板PANELS 面板 ~点击查看完整版代码123456789&lt;div class="panel panel-primary"&gt; &lt;div class="panel-heading"&gt; &lt;h3 class="panel-title"&gt;Panel title&lt;/h3&gt; &lt;/div&gt; &lt;div class="panel-body"&gt; Panel content &lt;/div&gt; &lt;div class="panel-footer"&gt;Panel Footer&lt;/div&gt;&lt;/div&gt;7.1 WELL （一般也是用作放组件的容器）WELL ~点击查看完整版代码1234&lt;!-- WELL --&gt;&lt;div class="well"&gt;Hello World~&lt;/div&gt;&lt;div class="well well-lg"&gt;Hello World~&lt;/div&gt;&lt;div class="well well-sm"&gt;Hello World~&lt;/div&gt;7.2 ALERTS 警报提示ALERTS ~点击查看完整版代码12345678910&lt;!-- ALERTS --&gt;&lt;div class="alert alert-success" role="alert"&gt;...&lt;/div&gt;&lt;div class="alert alert-info" role="alert"&gt;...&lt;/div&gt;&lt;div class="alert alert-warning" role="alert"&gt;...&lt;/div&gt;&lt;div class="alert alert-danger" role="alert"&gt;...&lt;/div&gt;&lt;div class="alert alert-warning alert-dismissible" role="alert"&gt; &lt;button type="button" class="close" data-dismiss="alert" aria-label="Close"&gt;&lt;span class="glyphicon glyphicon-remove" aria-hidden="true"&gt;&lt;/span&gt;&lt;/button&gt; &lt;strong&gt;Warning!&lt;/strong&gt; Better check yourself, you're not looking too good.&lt;/div&gt;7.3 PROGRESS BAR 进度条PROGRESS BAR 进度条 ~点击查看完整版代码1234&lt;!-- PROGRESS BAR --&gt;&lt;div class="progress"&gt; &lt;div class="progress-bar progress-bar-success progress-bar-striped active" style="width: 50%"&gt;50%&lt;/div&gt;&lt;/div&gt;7.4 BADGES 徽章BADGES 徽章 ~点击查看完整版代码12345&lt;!-- BADGES 徽章 --&gt;&lt;a href="#"&gt;Inbox &lt;span class="badge"&gt;42&lt;/span&gt;&lt;/a&gt;&lt;button class="btn btn-primary" type="button"&gt; Messages &lt;span class="badge"&gt;4&lt;/span&gt;&lt;/button&gt;8.IMAGES 图片IMAGES 图片 ~点击查看完整版代码123456789&lt;!-- IMAGES --&gt;&lt;div class="container"&gt; &lt;img class="img-thumbnail" style="width: 250px;height: 200px" alt="oops~" src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1557261857427&amp;di=4d8c09aba323a902728799f165627b6c&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201612%2F07%2F20161207224851_ZCSfY.jpeg"&gt; &lt;img class="img-rounded" style="width: 250px;height: 200px" alt="oops~" src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1557261857427&amp;di=4d8c09aba323a902728799f165627b6c&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201612%2F07%2F20161207224851_ZCSfY.jpeg"&gt; &lt;img class="img-circle" style="width: 250px;height: 200px" alt="oops~" src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1557261857427&amp;di=4d8c09aba323a902728799f165627b6c&amp;imgtype=0&amp;src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201612%2F07%2F20161207224851_ZCSfY.jpeg"&gt;&lt;/div&gt;9.GRID SYSTEM 网格系统使用bootstrap中的网格系统来布局是一件非常轻松的事情，我们可以不用去考虑屏幕的像素大小div的位置，直接使用网格系统就可以完成div布局还可以适配各种大小的屏幕。bootstrap默认把一行分为12个格子通过对每个div所占格子的数量来确定该div应该占该行的比例大小是多少。9.1 Offsetting columns 偏移列Offsetting columns 偏移列 ~点击查看完整版代码1234567891011&lt;div class="row"&gt; &lt;div class="col-md-4"&gt;.col-md-4&lt;/div&gt; &lt;div class="col-md-4 col-md-offset-4"&gt;.col-md-4 .col-md-offset-4&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt; &lt;div class="col-md-3 col-md-offset-3"&gt;.col-md-3 .col-md-offset-3&lt;/div&gt; &lt;div class="col-md-3 col-md-offset-3"&gt;.col-md-3 .col-md-offset-3&lt;/div&gt;&lt;/div&gt;&lt;div class="row"&gt; &lt;div class="col-md-6 col-md-offset-3"&gt;.col-md-6 .col-md-offset-3&lt;/div&gt;&lt;/div&gt;9.2 Nesting columns 嵌套网格Nesting columns 嵌套网格 ~点击查看完整版代码12345678910111213&lt;div class="row"&gt; &lt;div class="col-sm-9"&gt; Level 1: .col-sm-9 &lt;div class="row"&gt; &lt;div class="col-xs-8 col-sm-6"&gt; Level 2: .col-xs-8 .col-sm-6 &lt;/div&gt; &lt;div class="col-xs-4 col-sm-6"&gt; Level 2: .col-xs-4 .col-sm-6 &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;9.3 Mobile, tablet, desktop 不同屏幕大小适配col-lg-* 大屏幕col-md-* 中等屏幕 例如ipd procol-sm-* 小屏幕 例如 ipd minicol-xs-* 最小的屏幕 例如各类手机当格子的个多余12时则每组额外的列将作为一个单元换行要根据不同的屏幕分配不痛的col占比 当格子凑满满了12格时就会自动换行。当需要自动换行是应该添加防止第二行的内容被第一行挤占变形Responsive column resets ~点击查看完整版代码12345678910&lt;div class="row"&gt; &lt;div class="col-xs-6 col-sm-3"&gt;.col-xs-6 .col-sm-3&lt;/div&gt; &lt;div class="col-xs-6 col-sm-3"&gt;.col-xs-6 .col-sm-3&lt;/div&gt; &lt;!-- Add the extra clearfix for only the required viewport --&gt; &lt;div class="clearfix visible-xs-block"&gt;&lt;/div&gt; &lt;div class="col-xs-6 col-sm-3"&gt;.col-xs-6 .col-sm-3&lt;/div&gt; &lt;div class="col-xs-6 col-sm-3"&gt;.col-xs-6 .col-sm-3&lt;/div&gt;&lt;/div&gt;效果图：错误示例：下一篇文章将是运用这篇文章所学到的东西和bootstrap的组件来写一个简单但是很酷的网页。点击下方连接直接跳转《使用bootstrap3样式制作一个炫酷的网页》视频教程地址]]></content>
      <categories>
        <category>Web-Development</category>
      </categories>
      <tags>
        <tag>Bootstrap</tag>
        <tag>CheatSheet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQuery基础]]></title>
    <url>%2FjQueryjc%2F</url>
    <content type="text"><![CDATA[jQuery 是一个 JavaScript 库。jQuery 极大地简化了 JavaScript 编程。jQuery 很容易学习。(adsbygoogle=window.adsbygoogle||[]).push({})1.Intro &amp; Selectors1.1 把 jQuery 添加到您的网页如需使用 jQuery，需要下载 jQuery 库，然后把它包含在希望使用的网页中。jQuery 库是一个 JavaScript 文件，可以在html文件中引用它。1&lt;script src="../jquery-3.4.1.min.js"&gt;&lt;/script&gt;下载地址1.2 jQuery 选择器jQuery 元素选择器和属性选择器允许您通过标签名、属性名或内容对 HTML 元素进行选择。选择器允许您对 HTML 元素组或单个元素进行操作。在 HTML DOM 术语中：选择器允许您对 DOM 元素组或单个 DOM 节点进行操作。Intro & Selectors~点击查看完整代码12345678910111213141516&lt;script&gt; $('h1').hide(); $('#heading1').hide(); $('h1.heading2').hide(); // 隐藏类是“heading2”的h1标签内容 $('span').css('color', 'green'); // 所有地span中地内容发生改变 $('p span').css('color', 'red'); // p标记里面的span标记中的内容发生改变 有先后顺序 $('ul#list li:first').css('color', 'red'); $('ul#list li:last').css('color', 'green'); $('ul#list li:even').css('background-color', 'silver'); // 选奇数行 $('ul#list li:odd').css('background-color', 'yellow'); // 选偶数行 $('ul#list li:nth-child(3n)').css('list-style', 'none'); //nth-child(n) 选择器选取属于其父元素的不限类型的第 n 个子元素的所有元素。3n就是每第三个 $(':button').hide(); $('[href]').css('color', 'red'); $('a[href="http://lee1224.com"]').css('color', 'gray'); //$('*').hide(); // 隐藏全部&lt;/script&gt;执行前的网页：执行后：2.EventsEvent~点击查看完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Events&lt;/title&gt; &lt;script src="../jquery-3.4.1.min.js"&gt;&lt;/script&gt; &lt;style&gt; body &#123; font-size: 17px; font-family: Arial; background: #f4f4f4; line-height: 1.5em; &#125; header &#123; background: #333333; color: #fff; padding: 20px; text-align: center; border-bottom: 4px #000 solid; margin-bottom: 10px; &#125; #container &#123; width: 90%; margin: auto; padding: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt; &lt;h1&gt;jQuery Crash Course | Events&lt;/h1&gt;&lt;/header&gt;&lt;div id="container"&gt; &lt;h1&gt;Mouse Events&lt;/h1&gt; &lt;button id="btn1" class="btnClass"&gt;Button 1&lt;/button&gt; &lt;button id="btn2"&gt;Button 2&lt;/button&gt; &lt;button id="buttoncgbk"&gt;Buttoncgbk&lt;/button&gt; &lt;p class="para1"&gt; Wikipedia is hosted by the Wikimedia Foundation, a non-profit organization that also hosts a range of other projects. Wikipedia apps are now available: Download for iOS on the App Store Download for Android on Google Play View full list of available Wikipedia apps &lt;/p&gt; &lt;!-- &lt;h1 id="coords"&gt;&lt;/h1&gt;--&gt; &lt;form id="form"&gt; &lt;label&gt;Name&lt;/label&gt; &lt;br&gt; &lt;input type="text" id="name" name="name"&gt; &lt;br&gt; &lt;label&gt;Email&lt;/label&gt; &lt;br&gt; &lt;input type="email" id="email" name="email"&gt; &lt;br&gt; &lt;label&gt;Gender&lt;/label&gt; &lt;select id="gender" name="gender"&gt; &lt;option value="male"&gt;Male&lt;/option&gt; &lt;option value="female"&gt;Female&lt;/option&gt; &lt;/select&gt;&lt;br&gt; &lt;input type="submit" value="Submit"&gt; &lt;/form&gt;&lt;/div&gt;&lt;script&gt; $(document).ready(function () &#123; // 等页面加载完成再执行，否则找不到元素。这样就可以把代码放在任何位置 $('#btn1').click(function () &#123; alert('Button Clicked!'); &#125;); $('#btn1').on('click', function () &#123; // 效果和上面一样 alert('Button Clicked!'); &#125;); $("#buttoncgbk").toggle(function () &#123; //点击按钮切换不同背景 $("body").css("background-color", "green"); &#125;, function () &#123; $("body").css("background-color", "red"); &#125;, function () &#123; $("body").css("background-color", "yellow"); &#125; ); $('#btn1').on('click', function () &#123; $('.para1').toggle(); &#125;); $('#btn2').on('click', function () &#123; $('.para1').show(); &#125;); $('#btn1').dblclick(function () &#123; // 双击事件 $('.para1').toggle(); &#125;); $('#btn2').hover(function () &#123; // hover不是事件事mouseenter和mousleave的shorthand $('.para1').toggle(); &#125;); $('#btn1').on('mousemove', function () &#123; // 鼠标动一下就触发一次 $('.para1').toggle(); &#125;); $('#btn1').on('mousedown', function () &#123; // 鼠标动一下就触发一次 $('.para1').toggle(); &#125;); $('#btn1').on('mouseup', function () &#123; // 鼠标动一下就触发一次 $('.para1').toggle(); &#125;); $('#btn1').click(function (e) &#123; // console.log(e); // 在浏览器打开console可以查看相关信息 // alert(e.currentTarget.id); // alert(e.currentTarget.innerHTML); // alert(e.currentTarget.outerHTML); alert(e.currentTarget.className); &#125;); $(document).on('mousemove', function (e) &#123; // console.log('Cooeds Y:'+e.clientY+'X:'+e.clientX); // 在console显示当前鼠标位置 $('#coords').html('Cooeds Y:' + e.clientY + 'X:' + e.clientX); &#125;); $('input').focus(function () &#123; $(this).css('background', 'silver'); &#125;); $('input').blur(function () &#123; // 与focus相反 $(this).css('background', 'white'); &#125;); $('input').keyup(function (e) &#123; // 键盘按下起来的时候事件 console.log(e.target.value); &#125;); $('select#gender').change(function (e) &#123; alert(e.target.value); &#125;); $('#form').submit(function (e) &#123; e.preventDefault(); // 取消事件的默认动作。 var name = $('input#name').val(); console.log(name); &#125;); &#125;);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;点击查看更多事件内容3.DOM ManipulationDOM Manipulation~点击查看完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;EventDOM Manipulations&lt;/title&gt; &lt;script src="../jquery-3.4.1.min.js"&gt;&lt;/script&gt; &lt;style&gt; body &#123; font-size: 17px; font-family: Arial; background: #f4f4f4; line-height: 1.5em; &#125; header &#123; background: #333333; color: #fff; padding: 20px; text-align: center; border-bottom: 4px #000 solid; margin-bottom: 10px; &#125; #container &#123; width: 90%; margin: auto; padding: 10px; &#125; .myClass &#123; color: white; background: black; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt; &lt;h1&gt;jQuery Crash Course | DOM Manipulaion&lt;/h1&gt;&lt;/header&gt;&lt;div id="container"&gt; &lt;button id="btn1"&gt;Button 1&lt;/button&gt; &lt;p class="para1"&gt;This is a paragraph.&lt;/p&gt; &lt;p class="para2"&gt;This is another paragraph.&lt;/p&gt; &lt;div id="myDiv"&gt;&lt;/div&gt; &lt;input type="text" id="newItem"&gt; &lt;ul id="list"&gt; &lt;li&gt;List Item 1&lt;/li&gt; &lt;li&gt;List Item 2&lt;/li&gt; &lt;li&gt;List Item 3&lt;/li&gt; &lt;li&gt;List Item 4&lt;/li&gt; &lt;/ul&gt; &lt;a href="https://www.lee1224.com"&gt;一只老菜鸡&lt;/a&gt; &lt;ul id="users"&gt; &lt;/ul&gt;&lt;/div&gt;&lt;script&gt; $(document).ready(function () &#123; $('p.para1').css('color', 'red'); $('p.para1').css(&#123;color: 'red', background: '#ccc'&#125;); $('p.para2').addClass('myClass'); $('p.para2').removeClass('myClass'); $('#btn1').click(function () &#123; $('p.para2').toggleClass('myClass'); // 切换样式 &#125;); $('#myDiv').text('Hello Wold'); // 直接显示文本 $('#myDiv').html('&lt;h3&gt;Hello World&lt;/h3&gt;'); alert($('#myDiv').text()); $('ul').append('&lt;li&gt;Append List Item&lt;/li&gt;'); // 在最后添加(内部) $('ul').prepend('&lt;li&gt;Prepend List Item&lt;/li&gt;'); // 在第一个前添加（内部） function prepend1() &#123; $('.para1').prependTo('.para2'); &#125;; setTimeout(prepend1, 3000); $('.para1').appendTo('.para2'); $('ul').before('&lt;h4&gt;Hello&lt;/h4&gt;'); // 前面添加(外部) $('ul').after('&lt;h4&gt;World&lt;/h4&gt;'); // 在后面添加（外部） $('ul').empty(); // 把所有的innerHTML清除 标签还在 $('ul').detach(); // 把标签也清除 $('a').attr('target', '_blank'); // 在新页面打开链接 alert($('a').attr('href')); $('a').removeAttr('target'); $('p').wrap('&lt;h1&gt;'); // 使用h1标签分别包裹起来 $('p').wrapAll('&lt;h2&gt;') // 把所有内容包裹在一个h2标签中 $('#newItem').keyup(function (e) &#123; var code = e.which; if (code == 13) &#123; // while属性范围值为13是即为按下enter键 e.preventDefault(); $('ul').append('&lt;li&gt;' + e.target.value + '&lt;/li&gt;'); &#125; &#125;); var myArr = ['Brad', 'Kelley', 'Nate', 'Jose']; $.each(myArr, function (i, Val) &#123; $('#users').append('&lt;li&gt;' + Val + '&lt;/li&gt;'); &#125;); var newArr = $('ul#list li').toArray(); $.each(newArr, function (i, Val) &#123; console.log(Val.innerHTML); &#125;); &#125;);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;点击查看更多DOM内容4.Effects and AnimationEffects and Animation~点击查看完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Effects and Animation&lt;/title&gt; &lt;script src="../jquery-3.4.1.min.js"&gt;&lt;/script&gt; &lt;style&gt; body &#123; font-size: 17px; font-family: Arial; background: #f4f4f4; line-height: 1.5em; &#125; header &#123; background: #333333; color: #fff; padding: 20px; text-align: center; border-bottom: 4px #000 solid; margin-bottom: 10px; &#125; #container &#123; width: 90%; margin: auto; padding: 10px; &#125; #box &#123; background: #333; color: #fff; width: 500px; height: 90px; padding: 40px; text-align: center; &#125; #box2 &#123; background: red; width: 50px; height: 50px; position: relative; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;header&gt; &lt;h1&gt;jQuery Crash Course | Effects and Animation&lt;/h1&gt;&lt;/header&gt;&lt;div id="container"&gt; &lt;button id="btnFadeOut"&gt;Fade Out&lt;/button&gt; &lt;button id="btnFadeIn"&gt;Fade In&lt;/button&gt; &lt;button id="btnFadeTog"&gt;Fade Toggle&lt;/button&gt; &lt;hr&gt; &lt;button id="btnSlideUp"&gt;Fade Up&lt;/button&gt; &lt;button id="btnSlideDown"&gt;Slide Down&lt;/button&gt; &lt;button id="btnSlideTog"&gt;Slide Toggle&lt;/button&gt; &lt;button id="btnStop"&gt;Stop&lt;/button&gt; &lt;hr&gt; &lt;div id="box"&gt;&lt;h1&gt;Hello World&lt;/h1&gt;&lt;/div&gt; &lt;hr&gt; &lt;button id="btnMoveLeft"&gt;Move Left&lt;/button&gt; &lt;button id="btnMoveRight"&gt;Move Right&lt;/button&gt; &lt;button id="btnMoveAround"&gt;Slide Around&lt;/button&gt; &lt;div id="box2"&gt;&lt;/div&gt;&lt;/div&gt;&lt;script&gt; $(document).ready(function () &#123; $('#btnFadeOut').click(function () &#123; $('#box').fadeOut(3000, function () &#123; $('#btnFadeOut').text("It's Gone") &#125;); &#125;); $('#btnFadeIn').click(function () &#123; $('#box').fadeIn(3000, function () &#123; $('#btnFadeOut').text('Fade Out'); &#125;); &#125;); $('#btnFadeTog').click(function () &#123; $('#box').fadeToggle(3000); &#125;); $('#btnSlideUp').click(function () &#123; $('#box').slideUp(2000); &#125;); $('#btnSlideDown').click(function () &#123; $('#box').slideDown(2000); &#125;); $('#btnSlideTog').click(function () &#123; $('#box').slideToggle(2000); &#125;); $('#btnStop').click(function () &#123; $('#box').stop(); &#125;); $('#btnMoveRight').click(function () &#123; $('#box2').animate(&#123; // CSS属性值是逐渐改变的，这样就可以创建动画效果 left: 200, height: '150px', width: '150px', opacity: '0.5' // 不透明度 &#125;) &#125;); $('#btnMoveLeft').click(function () &#123; $('#box2').animate(&#123; left: 0, height: '100px', width: '100px', opacity: '1' &#125;); &#125;); $('#btnMoveAround').click(function () &#123; var box = $('#box2'); box.animate(&#123; left: 100 &#125;); box.animate(&#123; top: 100 &#125;); box.animate(&#123; left: 0, top: 100 &#125;); box.animate(&#123; left: 0, top: 0 &#125;); &#125;); &#125;);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;点击查看更多Animation内容5.AjaxAjax~点击查看完整代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Ajax&lt;/title&gt; &lt;script src="../jquery-3.4.1.min.js"&gt;&lt;/script&gt; &lt;style&gt; body &#123; font-size: 17px; font-family: Arial; background: #f4f4f4; line-height: 1.5em; &#125; header &#123; background: #333333; color: #fff; padding: 20px; text-align: center; border-bottom: 4px #000 solid; border-radius: 10px; margin-bottom: 10px; &#125; #container &#123; width: 90%; margin: auto; padding: 10px; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;header id="header"&gt; &lt;h1&gt;jQuery Crash Course | Ajax&lt;/h1&gt;&lt;/header&gt;&lt;div id="container"&gt; &lt;div id="result"&gt;&lt;/div&gt; &lt;ul id="users"&gt;&lt;/ul&gt; &lt;h3&gt;Add Post&lt;/h3&gt; &lt;form id="postFrom" action="https://jsonplaceholder.typicode.com/posts"&gt; &lt;input type="text" id="title" placeholder="Title"&gt;&lt;br&gt; &lt;textarea laceholder="Body" id="body"&gt;&lt;/textarea&gt;&lt;br&gt; &lt;input type="submit" value="Submit"&gt; &lt;/form&gt;&lt;/div&gt;&lt;script&gt; $(document).ready(function () &#123; /*$('#result').load('test.html',function ( responseTxt, statusTxt, xhr) &#123; if (statusTxt=='success')&#123; alert('It went fine'); &#125;else if (statusTxt=='error')&#123; alert('Error:'+xhr.statusText); &#125; &#125;); $.get('test.html', function (data) &#123; $('#result').html(data); &#125;); $.getJSON('users.json', function (data) &#123; $.each(data, function (i,user) &#123; // i 表示下标 user 表示每个对象 $('ul#users').append('&lt;li&gt;'+user.firstName+'&lt;/li&gt;'); &#125;) &#125;); $.ajax(&#123; method:'GET', url:'https://jsonplaceholder.typicode.com/posts', dataType:'json' &#125;).done(function (data) &#123; console.log(data); $.map(data, function (post, i) &#123; $('#result').append('&lt;h3&gt;'+post.title+'&lt;/h3&gt;&lt;p&gt;'+post.body+'&lt;/p&gt;'); &#125;); &#125;)*/ $('#postFrom').submit(function (e) &#123; e.preventDefault(); var title = $('#title').val(); var body = $('#body').val(); var url = $(this).attr('action'); // attr() 方法设置或返回被选元素的属性值。 $.post(url, &#123;title:title, body:body&#125;).done(function (data) &#123; // 结合示例：https://www.runoob.com/try/try.php?filename=tryjquery_ajax_post2 console.log('Post Saved'); console.log(data); &#125;) &#125;); &#125;);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;点击查看更多Ajax内容视频教程地址]]></content>
      <categories>
        <category>Web-Development</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx配置ssl证书实现https访问]]></title>
    <url>%2Fnginxsslpz%2F</url>
    <content type="text"><![CDATA[基于HTTP协议，通过SSL或TLS提供加密处理数据、验证对方身份以及数据完整性保护。更通俗地说可以样网站不现实“不安全”字样。(adsbygoogle=window.adsbygoogle||[]).push({})1. 下载ssl证书申请ssl证书地办法有很多可以去买，也可以在腾讯云百度云之类地平台免费申请。申请好之后就在ssl证书管理页面下载证书。解压出来就是这些东西2. 把证书上传到服务器不会地可以在gitbash中使用这条命令来上传1234567#对拷文件夹下所有文件 (不包括文件夹本身)scp /本地文件/ 用户名@地址:/目标文件夹/#对拷文件夹 (包括文件夹本身)scp -r /本地文件/ 用户名@地址:/目标文件夹/#本例中使用的目标文件夹是scp /本地文件/ 用户名@地址:/etc/ssl/点击查看更多scp命令内容3. 安装和配置Nginx3.1 安装Nginx自行参考本站另外一篇文章 《Nginx搭建hexo博客》3.2 配置（以本站为例）仅支持https访问。仅能使用特定域名访问。仅有本站才能引用该网站的静态文件即防盗链。在Nginx目录下的conf.d文件夹内添加一个新的配置文件XXX.conf 写入以下内容12345678910111213141516171819server &#123; listen 443; server_name lee1224-1257254543.file.myqcloud.com; # 改为绑定证书的域名 ssl on; ssl_certificate /etc/ssl/imglee1224/1_lee1224-1257254543.file.myqcloud.com_bundle.crt; # 改为自己申请得到的 crt 文件的名称 ssl_certificate_key /etc/ssl/imglee1224/2_lee1224-1257254543.file.myqcloud.com.key; # 改为自己申请得到的 key 文件的名称 ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; ssl_prefer_server_ciphers on; location / &#123; root /var/www/blogIMG; # 网站根目录 index avatar.png; valid_referers none blocked *.lee1224.com; if ($invalid_referer) &#123; # 当非指定域名引用时指向下面的图片，不让别人引用 rewrite ^/ https://gss1.bdstatic.com/9vo3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike272%2C5%2C5%2C272%2C90/sign=3107ac963fadcbef15397654cdc645b8/a6efce1b9d16fdfa4ef453bcba8f8c5495ee7bcc.jpg; &#125; &#125;&#125;把Nginx目录下的Nginx.conf文件中的server{}内容全部注释 进引用 新添加的XXX.conf文件重启Nginx：1service nginx restart搞定！]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>https</tag>
        <tag>ssl证书</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaScript基础]]></title>
    <url>%2FJavaScriptjc%2F</url>
    <content type="text"><![CDATA[JavaScript一种直译式脚本语言，是一种动态类型、弱类型、基于原型的语言，内置支持类型。它的解释器被称为JavaScript引擎，为浏览器的一部分，广泛用于客户端的脚本语言。(adsbygoogle=window.adsbygoogle||[]).push({})1. Setup &amp; Hello World有浏览器就能运行JavaScript脚本。可以直接再浏览器中运行（以Chrome为例，按F12进入调试模式，然后在Console中写入代码。）考虑到便捷性和可读性本人使用的是IDE工具，选择自己喜欢的就好。Setup & Hello World~点击查看完整代码1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Setup &amp; Hello World&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!-- JavaScript代码要写在script标签内--&gt; &lt;script type="text/javascript"&gt; //这是注释 /* 这也是注释 */ document.write("hello world!"); &lt;/script&gt;&lt;/body&gt;&lt;/html&gt;2. Using External Files在html文件中可以在特定位置引入外部js文件的方式来执行js代码，这样的好处就是可以在不同的html文件中引用相同的js代码。Using External Files~点击查看完整代码1&lt;script src="script.js"&gt;&lt;/script&gt;点击查看更多JavaScript使用的相关内容3. Writing HTML in JavascriptJavaScript中的write() 方法可向文档写入 HTML 表达式或 JavaScript 代码。于是我们就可以利用这个特性直接使用js来写html标记语言。Setup & Hello World~点击查看完整代码12document.write("&lt;h2 style='color: silver'&gt;黎雁鹏&lt;/h2&gt;");document.write("&lt;hr/&gt;");4. Variables &amp; Data TypesVariables & Data Types~点击查看完整代码12345678910var phrase = "To be or not to be "; // 字符串类型var age = 22; // 整型var gpa = 2.1; // 浮点型var isMale =true; // 布尔型var flaws = null; // null 空var descraption = undefined; // 暂未定义document.write(phrase + "&lt;br/&gt;");phrase = 'lee'; // 即该即变document.write(phrase + "&lt;br/&gt;");运行效果如下：点击查看更多数据类型相关内容5. Working With StringsWorking With Strings~点击查看完整代码12345678910111213var phrase = "Dp Lee";document.write(phrase.length + "&lt;br/&gt;");document.write(phrase.toUpperCase() + "&lt;br/&gt;");document.write(phrase.charAt(1) + "&lt;br/&gt;");document.write(phrase.indexOf('e').toString() + "&lt;br/&gt;"); //显示第一次出现的索引document.write(phrase.lastIndexOf('e').toString() + "&lt;br/&gt;"); //显示最后一次出现的索引 如果找不到返回-1document.write(phrase.substring(1, 4) + "&lt;br/&gt;"); //左开右闭 不包括第二个参数的document.write(phrase.substring(phrase.indexOf('L'), phrase.length) + "&lt;br/&gt;");document.write(phrase.endsWith("Lee") + "&lt;br/&gt;");var text = "Lee";document.write(phrase.includes('L') + "&lt;br/&gt;");document.write(phrase + text + "&lt;br/&gt;");运行效果如下：点击查看更多字符串相关内容6. Math &amp; NumbersMath & Numbers~点击查看完整代码12345678910111213141516171819var num = -2;document.write(2 + num + "&lt;br/&gt;"); //0document.write(2 - num + "&lt;br/&gt;"); //4document.write(2 * num + "&lt;br/&gt;"); //-4document.write(2 / num + "&lt;br/&gt;"); //-1document.write(2 % num + "&lt;br/&gt;"); //0document.write(2 + num - (num * 2) / 2 + "&lt;br/&gt;"); //2//methoddocument.write(Math.abs(num) + "&lt;br/&gt;"); //2document.write(Math.max(num, 12, 4) + "&lt;br/&gt;"); //12document.write(Math.min(num, 12, 4) + "&lt;br/&gt;"); //-2document.write(Math.round(2.4) + "&lt;br/&gt;"); //2document.write(Math.round(2.5) + "&lt;br/&gt;"); //3document.write(Math.sqrt(36) + "&lt;br/&gt;"); //6 开平方document.write(Math.pow(2, 3) + "&lt;br/&gt;"); //8 2的3次方document.write(Math.random() + "&lt;br/&gt;"); //0~1随机数document.write(Math.round(Math.random() * 10) + "&lt;br/&gt;"); //十以内随机数点击查看更多Math对象相关内容点击查看更多Number对象相关内容7. Getting User InputGetting User Input~点击查看完整代码123var name = window.prompt("waht is your name?", "dplee");var age = window.prompt("How old are you?");document.write("Hey " + name + ", how are you today? " + "Do you like being " + age +" years old?");8. ArraysArrays~点击查看完整代码12345678910111213141516var fruits = new Array("apples", "oranges", "peaches");var vegetables = ["cucumber", "Tomatoes", "Pepper"];var mix = [ "lee", 21, false, vegetables];document.write(fruits + vegetables + mix + "&lt;hr/&gt;");mix[3] = fruits;document.write(fruits + vegetables + mix + "&lt;hr/&gt;");document.write(mix.length);var str1 = "lee, dp, li, yan, peng";var lee = str1.split(",");document.write(lee);点击查看更多数组相关内容9. FunctionsFunctions~点击查看完整代码123456789101112131415161718192021222324252627function sayHi() &#123; var name = "DP Lee"; document.write("&lt;h2&gt;Hello "+ name +"!&lt;/h2&gt;"); alert("hey! " + name + " How are you!");&#125;sayHi();function sayHi2(name) &#123; document.write("&lt;h2&gt;Hello "+ name +"!&lt;/h2&gt;"); // alert("hey! " + name + " How are you!");&#125;sayHi2("DP Lee");sayHi2("A Fu");function sayHi3(name, age) &#123; document.write("&lt;h2&gt;Hello "+ name +"! Do you like being " + age + " years old? &lt;/h2&gt;"); // alert("hey! " + name + " How are you!");&#125;sayHi3("Lee", 21);function addition(num1, num2) &#123; return num1 + num2;&#125;document.write(addition(2, 3));运行结果如下：点击查看更多函数相关内容10. Accessing HTML Elementsindex.html~点击查看完整代码1234567891011121314151617181920&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Accessing HTML Elements&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--&lt;script src="script.js"&gt;&lt;/script&gt;如果这句代码放在这里那么就不生效 因为下面的 元素在执行到这里时还没有被创建--&gt;&lt;h1 id="header"&gt;JavaScript&lt;/h1&gt;&lt;a id="link" href="https://www.lee1224.com"&gt;一只老菜鸡&lt;/a&gt;&lt;script src="script.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;script.js~点击查看完整代码123456789var header = document.getElementById("header");header.innerHTML = "Overridden";header.style.color = "red";header.style.backgroundColor = "blue";var link = document.getElementById("link");link.innerHTML = "嗨呀~原来是只老菜鸡！";link.href = "https://www.lee1224.com/JavaScriptjc/";link.style = "color:red;";运行结果如下：11. Event Listenersindex.html~点击查看完整代码123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Event Listeners&lt;/title&gt; &lt;style&gt; a &#123; color: #000000; text-decoration: none; &#125; .menu &#123; color: #ffffff; border-radius: 5px; /*让边框变得圆润*/ /*color: brown;*/ &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;img id="image" onclick="handleClick()" src="nt.png" width="200"&gt;&lt;br&gt;&lt;!--&lt;button id="button" onclick="alert('You Clicked Me!')"&gt;Click Me&lt;/button&gt;--&gt;&lt;button id="button" onclick="handleClick()"&gt;Click Me&lt;/button&gt;&lt;button id="button2" onclick="handleClick2(this)"&gt;Click Me 2&lt;/button&gt;&lt;table style="width:100%; height:100%;"&gt; &lt;tr&gt; &lt;td class="menu"&gt;&lt;a href="#"&gt;首页&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="menu"&gt;&lt;a href="#"&gt;深海鱼&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td class="menu"&gt;&lt;a href="#"&gt;香蕉&lt;/a&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;&lt;script src="script.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;script.js~点击查看完整代码1234567891011121314151617181920212223242526272829303132333435function handleClick() &#123; alert("Clicked");&#125;function handleClick2(element) &#123; element.innerHTML = "Clicked"; element.style = "background-color: antiquewhite";&#125;var image = document.getElementById("image");// 添加一个事件监听器，第一个参数写事件名称不需要"on"，第二个参数填写方法。image.addEventListener("mouseover", function () &#123; this.style = "box-shadow: 2px 2px 2px 2px grey"; this.width = "150";&#125;);var image = document.getElementById("image");image.addEventListener("mouseout", function () &#123; this.style = ""; this.width = "200";&#125;);// 通过类名来找到一系列元素并且逐个添加事件。var bs = document.getElementsByClassName("menu");for (i in bs) &#123; bs[i].onmouseover = function () &#123; this.style.backgroundColor = "brown"; &#125;; bs[i].onmouseout = function () &#123; this.style.backgroundColor = "white"; // this.bgColor = "white"; &#125;;&#125;运行结果：点击查看更多addEventListener() 方法相关内容点击查看更多DOM Event 对象相关内容12. Building a Messaging Appindex.html~点击查看完整代码12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Building a Messaging App&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;input id="textbox" type="text"&gt;&lt;button id="button"&gt;Send&lt;/button&gt;&lt;ul id="messages"&gt;&lt;/ul&gt;&lt;script src="script.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;script.js~点击查看完整代码12345678910var button = document.getElementById("button");var messages = document.getElementById("messages");var texbox = document.getElementById("textbox");button.addEventListener("click", function () &#123; var newMessage = document.createElement("li"); // 添加一个新的列标签&lt;li&gt;&lt;/li&gt; newMessage.innerHTML = texbox.value; // 把textbo中的内容添加到刚刚添加的列中 messages.appendChild(newMessage); // 把列添加无序列表到中 &lt;ul&gt;&lt;li&gt;xxx&lt;/li&gt;&lt;/ul&gt; texbox.value = "";&#125;);运行结果如下：13. If StatementsIf Statements~点击查看完整代码12345678910111213141516171819202122232425262728var isMale = false;var isTall = true;if (isMale &amp;&amp; isTall)&#123; document.write("You are a tall male!");&#125;else &#123; document.write("You are either not male or not tall or neither.");&#125;document.write("&lt;hr/&gt;");if (isMale || isTall)&#123; document.write("You are a male or you are tall or both.");&#125;else &#123; document.write("You are not tall and not male.");&#125;document.write("&lt;hr/&gt;");if (isMale &amp;&amp; isTall)&#123; document.write("You are a male or you are tall or both.");&#125;else if(isMale &amp;&amp; !isTall)&#123; document.write("You are a shrot male.")&#125;else if(!isMale &amp;&amp; isTall)&#123; document.write("You are not male but you are tall.");&#125;else &#123; document.write("You are not tall and not male.");&#125;运行结果如下：点击查看更多if判断语句相关内容14. If Statements with comparisonsIf Statements with comparisons~点击查看完整代码123456789101112131415function max(num1, num2, num3) &#123; if (num1 &gt;= num2 &amp;&amp; num1 &gt;= num3)&#123; return num1; &#125;else if (num2 &gt;= num1 &amp;&amp; num2 &gt;= num3) &#123; return num2; &#125;else &#123; return num3; &#125;&#125;document.write(max(30, 44, 5));if ("phrase" == "phrase")&#123; document.write("True");&#125;运行结果如下：点击查看更多if判断语句相关内容15. Switch StatementsSwitch Statements~点击查看完整代码123456789101112131415161718192021222324252627282930function getDayNum(dayNum) &#123; var day; switch (dayNum) &#123; case 0: day = "Sunday"; break; case 1: day = "Monday"; break; case 2: day = "Tuesday"; break; case 3: day = "Wednsday"; break; case 4: day = "Thursday"; break; case 5: day = "Friday"; break; case 6: day = "Saturday"; default: day = "Day does't exist, "+dayNum+" isn't a valid number." &#125; return day;&#125;document.write(getDayNum(9)); // 5运行结果：点击查看更多switch相关内容16. ObjectsObjects~点击查看完整代码1234567891011121314var person = &#123; name: "DpLee", age: 21, isMale: true, occupation: "Student", printName: function () &#123; document.write("&lt;h1&gt;"+this.name+"&lt;/h1&gt;"); &#125;&#125;;document.write(person.name);person.name = "黎雁鹏";document.write(person.name);person.printName();运行结果如下：点击查看更多对象相关内容17. Real world objectsReal world objects~点击查看完整代码12345678910111213141516171819var myMovie = &#123; title: "The Social Network", releaseYear: 2010, duration: 2.0, actors: [ &#123; name: "Jessie Eiseberg", birthday: new Date("1983/11/05"), hometown: "New York, New York", &#125;, &#123; name: "Roonie Mara", birthday: new Date("1985/04/17"), hometown: "Bedford NewYork", &#125; ]&#125;;document.write(myMovie.actors[1].birthday);运行结果：点击查看更多对象相关内容18. While LoopsWhile Loops~点击查看完整代码123456789101112var i = 1;while (i &lt;= 10)&#123; document.write(i + "&lt;br/&gt;"); i++;&#125;var j = 11;do&#123; document.write(i + "&lt;br/&gt;"); j++;&#125;while (j &lt;= 10);运行结果：点击查看更多while循环相关内容19. Building a Password CheckerBuilding a Password Checker~点击查看完整代码123456789101112131415161718192021var password = "password";var response;var entryCount = 0;var enterLimite = 3;var error = false;while (password != response &amp;&amp; !error)&#123; if (entryCount &lt; enterLimite)&#123; response = window.prompt("Enter Password!"); entryCount++; &#125;else&#123; error = true; &#125;&#125;if (error) alert("Too many entries!");else alert("You got it!");20. For LoopsFor Loops~点击查看完整代码12345678var friends = ["Jim", "Stanley", "Kevin"];for (var i = 0; i &lt; friends.length; i++)&#123; document.write(friends[i] + "&lt;br/&gt;");&#125;// orfor (i in friends)&#123; document.write(friends[i] + "&lt;br/&gt;");&#125;运行效果：点击查看更多for循环相关内容21. Building a Multiple Choice QuizBuilding a Multiple Choice Quiz~点击查看完整代码1234567891011121314151617181920212223242526var questions = [ &#123; promt: "What color are the apples?\n(a) Red/Green\n(b) Purple\n(c) Orange", answer: "a" &#125;, &#123; promt: "What color are the banabas?\n(a) Teal\n(b) Magenta\n(c) Yellow", answer: "c" &#125;, &#123; promt: "What color are the strawberries?\n(a) Black\n(b) Red\n(c) Blue", answer: "b" &#125;];var score = 0;for (var i = 0; i &lt; questions.length; i++) &#123; var response = window.prompt(questions[i].promt); if (response == questions[i].answer) &#123; score++; alert("Correct!") &#125; else &#123; alert("WRONG!") &#125;&#125;alert("You got" + score + "/" + questions.length)运行效果如下：22. Nested Loops &amp; 2D ArraysNested Loops & 2D Arrays~点击查看完整代码123456789101112131415161718192021var numberGrid = [ [1, 2, 3], [4, 5, 6], [7, 8, 9], [0]];for (var i = 0; i &lt; numberGrid.length; i++) &#123; for (var j = 0; j &lt; numberGrid[i].length; j++) &#123; document.write(numberGrid[i][j]); &#125; document.write("&lt;br/&gt;");&#125;// orfor (i in numberGrid) &#123; for (j in numberGrid[i]) &#123; document.write(numberGrid[i][j]); &#125; document.write("&lt;br/&gt;");&#125;运行效果：点击查看更多for循环相关内容23. For Each Loopsindex.html~点击查看完整代码1234567891011121314151617181920212223242526&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;For Each Loops&lt;/title&gt; &lt;script src="script.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;乘以: &lt;input type="number" id="multiplyWith" value="10"&gt;&lt;/p&gt;&lt;button onclick="numbers.forEach(myFunction)"&gt;点我&lt;/button&gt;&lt;p&gt;计算后的值: &lt;span id="demo"&gt;&lt;/span&gt;&lt;/p&gt;&lt;script&gt;var numbers = [65, 44, 12, 4];function myFunction(item,index,arr) &#123; debugger; //使用debugger关键字可在浏览器调试运行查看变量值变化情况有助于理解 arr[index] = item * document.getElementById("multiplyWith").value; document.getElementById("demo").innerHTML = numbers;&#125;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;script.js~点击查看完整代码1234567891011121314151617var books = [ &#123; title: "Harry Potter", author: "JK Rowling", Pages: 300 &#125;, &#123; title: "Green Eggs &amp; Ham", author: "Dr. Seuss", Pages: 25 &#125;];var friends = ["Oscar", "Angela", "kevin"];books.forEach(function (book) &#123; document.write(book.author + "&lt;hr/&gt;")&#125;);运行效果：点击查看更多forEach() 方法相关内容24. Timingindex.html~点击查看完整代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Timing&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;!--setTimeout--&gt;&lt;button onclick="setTimeout(sayHi2, 3000, 'dplee')"&gt;Click Me&lt;/button&gt;&lt;p id="content"&gt; 请等三秒钟!&lt;/p&gt;&lt;script&gt; setTimeout("changeState()", 3000); function changeState() &#123; let content = document.getElementById('content'); content.innerHTML = "&lt;div style='color:red'&gt;我是三秒后显示的内容！&lt;/div&gt;"; &#125;&lt;/script&gt;&lt;!--setInterval--&gt;&lt;button onclick="setInterval(sayHi, 2000)"&gt;Click Me2&lt;/button&gt;&lt;script&gt; setInterval("changeState()", 3000); function changeState() &#123; let content = document.getElementById('content'); content.innerHTML = "&lt;div style='color:red'&gt;我是三秒后显示的内容！&lt;/div&gt;"; &#125;&lt;/script&gt;&lt;!--以下实例中，setInterval() 方法每 300 毫秒执行 setColor() 函数 ，该函数可以切换背景颜色。--&gt;&lt;button onclick="startChangeColor()"&gt;开始变色&lt;/button&gt;&lt;button onclick="stopColor()"&gt;停止切换&lt;/button&gt;&lt;script&gt; var myVar; function setColor() &#123; var x = document.body; x.style.backgroundColor = x.style.backgroundColor == "yellow" ? "pink" : "yellow"; &#125; function startChangeColor() &#123; myVar = setInterval(function () &#123; setColor() &#125;, 300); &#125; function stopColor() &#123; clearInterval(myVar); &#125;&lt;/script&gt;&lt;script src="script.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;script.js~点击查看完整代码1234567function sayHi() &#123; alert("Hi~ ");&#125;function sayHi2(name) &#123; alert("Hi~ "+ name);&#125;运行效果：点击查看更多计时相关内容25. Web Storageindex.html~点击查看完整代码12345678910111213&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset="UTF-8"&gt; &lt;title&gt;Web Storage&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;input id="textbox" type="text" /&gt;&lt;button id="btn"&gt;Save&lt;/button&gt;&lt;br&gt;&lt;br&gt;&lt;script src="script.js"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;script.js~点击查看完整代码12345678var textbox = document.getElementById("textbox");var button = document.getElementById("btn");textbox.value = localStorage.myName;addEventListener("click", function () &#123; localStorage.myName = textbox.value;&#125;);document.write("&lt;h1&gt;" + localStorage.myName + "&lt;/h1&gt;");运行效果：是不是有点像cookies的赶脚？点击查看更多Web 存储相关内容26. JavaScript 调试没有调试工具是很难去编写 JavaScript 程序的。你的代码可能包含语法错误，逻辑错误，如果没有调试工具，这些错误比较难于发现。通常，如果 JavaScript 出现错误，是不会有提示信息，这样你就无法找到代码错误的位置。在程序代码中寻找错误叫做代码调试。调试很难，但幸运的是，很多浏览器都内置了调试工具。内置的调试工具可以开始或关闭，严重的错误信息会发送给用户。有了调试工具，我们就可以设置断点 (代码停止执行的位置), 且可以在代码执行时检测变量。浏览器启用调试工具一般是按下 F12 键，并在调试菜单中选择 “Console” 。26.1 console.log() 方法如果浏览器支持调试，你可以使用 console.log() 方法在调试窗口上打印 JavaScript 值：1234a = 5;b = 6;c = a + b;console.log(c);设置断点在调试窗口中，你可以设置 JavaScript 代码的断点。在每个断点上，都会停止执行 JavaScript 代码，以便于我们检查 JavaScript 变量的值。在检查完毕后，可以重新执行代码（如播放按钮）。26.2 debugger 关键字debugger 关键字用于停止执行 JavaScript，并调用调试函数。这个关键字与在调试工具中设置断点的效果是一样的。如果没有调试可用，debugger 语句将无法工作。视频教程地址]]></content>
      <categories>
        <category>Web-Development</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>JS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django基础知识]]></title>
    <url>%2Fdjangojc%2F</url>
    <content type="text"><![CDATA[Django是一个基于MVC构造的框架。但是在Django中，控制器接受用户输入的部分由框架自行处理，所以 Django 里更关注的是模型（Model）、模板(Template)和视图（Views），称为 MTV模式。(adsbygoogle=window.adsbygoogle||[]).push({})1.MVC与MTV模型1.1 MVCWeb服务器开发领域里著名的MVC模式，所谓MVC就是把Web应用分为模型(M)，控制器(C)和视图(V)三层，他们之间以一种插件式的、松耦合的方式连接在一起，模型负责业务对象与数据库的映射(ORM)，视图负责与用户的交互(页面)，控制器接受用户的输入调用模型和视图完成用户的请求，其示意图如下所示：1.2 MTVDjango的MTV模式本质上和MVC是一样的，也是为了各组件间保持松耦合关系，只是定义上有些许不同，Django的MTV分别是值：M 代表模型（Model）： 负责业务对象和数据库的关系映射(ORM)。T 代表模板 (Template)：负责如何把页面展示给用户(html)。V 代表视图（View）： 负责业务逻辑，并在适当时候调用Model和Template。除了以上三层之外，还需要一个URL分发器，它的作用是将一个个URL的页面请求分发给不同的View处理，View再调用相应的Model和Template，MTV的响应模式如下所示：一般是用户通过浏览器向我们的服务器发起一个请求(request)，这个请求回去访问视图函数，（如果不涉及到数据调用，那么这个时候视图函数返回一个模板也就是一个网页给用户），视图函数调用模型，模型去数据库查找数据，然后逐级返回，视图函数把返回的数据填充到模板中空格中，最后返回网页给用户。以上内容借鉴自 点击原文《Django框架——Django简介》2. 开始的准备工作2.1 HTTP协议消息的格式1.请求(request)请求方法 路径 HTTP/1.1\r\nk1:v1\r\n…\r\n\r\n请求体 &lt;– 可以有,可以没有2.响应(response)HTTP/1.1 状态码 状态描述符\r\nk1:v1\r\nContent-Type: text/html; charset=utf8\r\n\r\n响应正文 &lt;– HTML内容3.GET请求和POST请求GET请求:浏览器请求一个页面搜索引擎检索关键字的时候POST请求:浏览器向服务端提交数据,比如登录/注册等2.2 Python web框架的本质收发socket消息 –&gt; 按照HTTP协议消息格式去解析消息路径和要执行的函数的对应关系 –&gt; 主要的业务逻辑字符串替换 –&gt; 模板(特殊符号 –&gt; 数据)一个完整得请求流程:启动服务端,等待客户端(用户的浏览器)来连接在浏览器地址栏输入URL,与服务端建立连接,浏览器发送请求服务端收到请求消息,解析请求消息,根据路径和函数的对应关系,找到将要执行的函数执行函数,打开HTML文件,进行字符串替换,得到一个最终要返回的HTML内容按照HTTP协议的消息格式要求,把HTML内容回复给用户浏览器(发送响应)浏览器收到响应的消息之后,按照HTML的规则渲染页面.关闭连接2.3 Django项目基本命令创建项目：1django-admin startproject 项目名命令行启动项目：123python3 manage.py runserver IP:端口 --&gt; 在指定的IP和端口启动python3 manage.py runserver 端口 --&gt; 在指定的端口启动python3 manage.py runserver --&gt; 默认在本机的8000端口启动创建app：1python3 manage.py startapp app名字2.4 Django静态文件配置1.Templates(存放HTML文件的配置) &lt;– 告诉Django去哪儿找我的HTML文件。2.静态文件(css/js/图片)12#静态文件保存目录的别名STATIC_URL = '/static/'1234567'''所有静态文件(css/js/图片)都放在该特定文件夹中下面的路径可指定多个，全都使用别名来引用，会自动从下面的目录中依次查找文件'''STATICFILES_DIRS = [ os.path.join(BASE_DIR, "static"),]2.5 注释掉setting.py中 带有 csrf 的那一行(大概45~47行)3. Django的ORM3.1 什么是ORMORM 全拼Object-Relation Mapping.中文意为 对象-关系映射.在MVC/MVT设计模式中的Model模块中都包括ORM3.2 ORM优势只需要面向对象编程, 不需要面向数据库编写代码.对数据库的操作都转化成对类属性和方法的操作。不用编写各种数据库的sql语句。实现了数据模型与数据库的解耦, 屏蔽了不同数据库操作上的差异。不在关注用的是mysql、oracle…等。通过简单的配置就可以轻松更换数据库, 而不需要修改代码。3.3 ORM劣势相比较直接使用SQL语句操作数据库,有性能损失。根据对象的操作转换成SQL语句,根据查询的结果转化成对象, 在映射过程中有性能损失。3.4 ORM和数据库关系每个模型都是一个Python类，它是django.db.models.Model的子类。模型的每个属性都代表一个数据库字段。综上所述，Django为您提供了一个自动生成的数据库访问API。3.4 使用Django的ORM详细步骤自己动手创建数据库1create database 数据库名;在Django项目中设置连接数据库的相关配置(告诉Django连接哪一个数据库)1234567891011# 数据库相关的配置DATABASES = &#123; 'default': &#123; 'ENGINE': 'django.db.backends.mysql', # 连接的数据库类型 'HOST': '127.0.0.1', # 连接数据库的地址 'PORT': 3306, # 端口 'NAME': "day61", # 数据库名称 'USER': 'root', # 用户 'PASSWORD': '123456' # 密码 &#125;&#125;告诉Django用pymysql代替默认的MySQLDB 连接MySQL数据库。在项目/init.py文件中,写下面两句:123import pymysql# 告诉Django用pymysql来代替默认的MySQLdbpymysql.install_as_MySQLdb()在app下面的models.py文件中定义一个类,这个类必须继承models.Model12class 类名(models.Model): ...执行两个命令12python3 manage.py makemigrations # 保存修改操作信息，类似于.git相关操作python3 manage.py migrate # 执行未完待续哦…]]></content>
      <categories>
        <category>Python</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Django</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[灵活运用npm包管理工具]]></title>
    <url>%2Fusenpmwell%2F</url>
    <content type="text"><![CDATA[npm中文文档(adsbygoogle=window.adsbygoogle||[]).push({})1.npm安装安装node.js(包含 npm)加入环境变量，通常安装node.js的时候会自动添加到系统环境变量中。cmd中运行npm -v 显示出版本号就说明安装成功。2.设置 npm 缓存路径windows下：12npm config set prefix "C:/Program Files/nodejs/npm_global" npm config set cache "C:/Program Files/nodejs/npm_cache" Linux\Mac 下:12npm config set prefix "~/nodejs/npm_global"npm config set cache "~/nodejs/npm_cache" 如果出现安装了某个全局模块但是运行时提示“bash: ncu: command not found”那么请把npm_global目录添加到环境变量中3.设置下载来源（镜像），加速下载123npm config set registry "https://registry.npm.taobao.org/"或者npm install -g cnpm -registry=https://registry.npm.taobao.org （安装后可使用cnpm代替npm）4.npm 模块更新升级插件 npm-check-updates1npm install -g npm-check-updates到需要升级的package.json同级目录下运行ncu命令（ncu 是 npm-check-updates 的缩写命令）如果有需要更新的版本则先根据提示运行ncu -u更新package.json中的版本信息，然后再运行npm install进行安装升级。如果在使用git bash运行ncu命令时出现这个问题：那么请使用cmd，重新运行此命令。4.1在右击菜单中添加在此处打开cmd把下面的代码复制到记事本保存为 xxx.reg1234567891011121314151617181920212223242526272829303132333435363738Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here] @="在此处打开命令行""Icon"="cmd.exe" [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here\command] @="\"C:\\Windows\\System32\\cmd.exe\"" [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt] @="在此处打开命令行" [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt\command] @="\"C:\\Windows\\System32\\cmd.exe\" \"cd %1\"" [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here] @="在此处打开命令行""Icon"="cmd.exe" [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here\command] @="\"C:\\Windows\\System32\\cmd.exe\""双击运行，OK！5.npm运用示例（安装HexoEditor）HexoEditor, 一个写 Hexo 非常好用的 Markdown 编辑器 HexoEditor1234git clone https://github.com/zhuzhuyule/HexoEditor.gitcd HexoEditornpm installnpm start如果在运行npm -install的时候报错出现这个问题提示找不到这个包：那么就打开 HexoEditor 目录下的的package.json文件，将文件中的这一行删除（先跳过这个包）：然后到目录node_modules下clone js-sequence-diagrams@1000000.0.6版本 进行手动安装：123git clone https://github.com/Moeditor/js-sequence-diagrams.gitcd js-sequence-diagramsnpm install把这个模块安装上以后就可以正常预览使用标记语言书写的博客咯~]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>node.js</tag>
        <tag>npm</tag>
        <tag>ncu</tag>
        <tag>npm-check-updates</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Django+uWSGI+Nginx环境搭建]]></title>
    <url>%2FDjangoNginx%2F</url>
    <content type="text"><![CDATA[将本地的Django项目部署到云服务器(adsbygoogle=window.adsbygoogle||[]).push({})1.开发环境开发语言： Python3后台框架：Djangowsgi服务器：uwsgiweb服务器：nginx2.首先python3和pip3的安装首先安装相关包1yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make下载python 地址：1wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz解压1tar xf Python-3.6.8.tgz安装目录为/usr/local/python3(可以自定义安装目录)1./configure -prefix=/usr/local/python3/编译并安装1make &amp;&amp; make install建立软链12ln -s /usr/local/python3/bin/python3 /usr/bin/python3ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3升级pip31pip3 pip3 install --upgrade pip安装其他软件12yum install mysql mysql-develyum install sqlite-devel3.安装django1pip3 install django1.11.114.安装uWSGI12345pip3 install uwsgiln -s /usr/local/python3/bin/uwsgi /usr/bin/uwsgi ln -s /usr/local/python3/bin/virtualenv /usr/bin/virtualenv ln -s /usr/local/python3/bin/gunicorn /usr/bin/gunicorn测试：1234# test.pydef application(env, start_response): start_response('200 OK', [('Content-Type','text/html')]) return [b"Hello World"] # python3uwsgi –http :666 –wsgi-file test.py5.将uwsgi与Django连接：配置setting.py中的allowed_host设置为：1ALLOWED_HOSTS = ['boomju.com']1uwsgi --http :666 --chdir /root/djlee/ --wsgi-file djlee/wsgi.py --master --processes 4 --threads 2 --stats 127.0.0.1:9192访问 http://boomju.com:666 成功，出现Django欢迎页面。参数太多，可以将其写入ini文件中123456789101112131415161718# hello_uwsgi.ini file[uwsgi]socket = 127.0.0.1:8000# the base directory (full path)chdir = /var/www/djlee# Django s wsgi filemodule = djlee.wsgi# process-related settings# mastermaster = true# maximum number of worker processesprocesses = 4# ... with appropriate permissions - may be needed# chmod-socket = 664# clear environment on exitvacuum = true# 当文件发生改变时重启touch-reload = /var/www/djlee/djlee/settings.py uwsgi –ini uwsgi.ini6.安装配置Nginx略 详情请见博文《Nginx搭建hexo博客》中安装Nginx部分7.将nginx和uwsgi以及Django结合Nginx配置文件1vim /etc/nginx/conf.d/djsite.conf在里面添加：123456789101112server&#123; listen 80; # 如果不加的话，会默认为80，这里也可以不改 server_name boomju.com; root /root/djlee/; index index.html; location /&#123; include /etc/nginx/uwsgi_params; uwsgi_pass 127.0.0.1:8000; # 需要和ini文件中的端口保持一致，这样才能实现两者的通信。 uwsgi_read_timeout 2; &#125;&#125;重启nginx：1service nginx restart8.让Nginx处理Django的静态文件静态文件指JS、css、图片等文件，在django项目投入生产中时，可以不必在setting中指明静态文件的路径，只需在nginx的站点配置中指明即可修改setting.py文件12345678DEBUG = FalseSTATIC_URL = '/static/'# 所有静态文件(css/js/图片)都放在该文件夹中，该文件夹与manage.py同级STATICFILES_DIRS = [ os.path.join(BASE_DIR, "static")]修改Nginx站点配置1234567891011121314151617server&#123; listen 80; # 如果不加的话，会默认为80，这里也可以不改 server_name boomju.com; location /static &#123; autoindex on; alias /var/www/djlee/static; &#125; location / &#123; include /etc/nginx/uwsgi_params; uwsgi_pass 127.0.0.1:8000; # 需要和ini文件中的端口保持一致，这样才能实现两者的通信。 uwsgi_read_timeout 2; &#125;&#125;网站最好不要部署在root目录下，因权限原因容易出现例如403、404等问题。后台启动:uwsgi： uwsgi uwsgi.ini -d uwsgi.log（可根据不同配置文件启动不同站点，但是会启动多个进程。）结束后台进程：可以把所有配置文件放到一个文件夹下使用emperor同时启动所有站点1uwsgi –emperor /path/to/vassals/ps -ef |grep uwsgi 查看进程号kill -9 父进程号或者：pkill -f uwsgi -9]]></content>
      <categories>
        <category>Python</category>
        <category>Django</category>
      </categories>
      <tags>
        <tag>Django</tag>
        <tag>uWSGI</tag>
        <tag>Nginx</tag>
        <tag>Python</tag>
        <tag>pip</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[动态规划法应用实例构造回文(Python3)]]></title>
    <url>%2Fdtghf1%2F</url>
    <content type="text"><![CDATA[动态规划程序设计是对解最优化问题的一种途径、一种方法，而不是一种特殊算法。动态规划程序设计往往是针对一种最优化问题，由于各种问题的性质不同，确定最优解的条件也互不相同，因而动态规划的设计方法对不同的问题，有各具特色的解题方法，而不存在一种万能的动态规划算法，可以解决各类最优化问题。(adsbygoogle=window.adsbygoogle||[]).push({})1、方法简介1.1 最长公共子串最长公共子串要求在原字符串中是连续的。在动态规划中，你要将某个指标最大化。在这个例子中，你要找出两个单词的最长公共子串。hish 和 fish 都包含的最长子串是什么呢？单元格中的值通常就是你要优化的值。在这个例子中，这很可能是一个数字：两个字符串都包含的最长子串的长度。坐标轴很是这两个单词。因此，网格可能类似于下面这样。从表格中我们可得得知最长公共字串长度为3，是”ish”。实现这个公式的伪代码类似于下面这样：1234if word_a[i] == word_b[j]: ←---------两个字母相同 cell[i][j] = cell[i-1][j-1] + 1else: ←------------------------------两个字母不同 cell[i][j] = 01.2 最长公共子序列子序列只需要保持相对顺序一致，并不要求连续。伪代码如下：1234if word_a[i] == word_b[j]: ←--------两个字母相同 cell[i][j] = cell[i-1][j-1] + 1else: ←------------------------------两个字母不同 cell[i][j] = max(cell[i-1][j], cell[i][j-1])2、[编程题] 构造回文牛客网上有这么一道腾讯2017暑期实习生编程题，题目如下图：这道题目就非常适合使用动态规划法来编写。通过上文的介绍，我们已经可以使用动态对话法来求最长公共子序列，按照题目要求，把字符串s反转过来，求他们的最长公共子序列，再减去原先字符串s的长度不就是最小的删除字符个数了吗？2.1 使用Python3编写代码构造回文123456789101112131415161718import numpy as npclass Solution: def longestPalindrome(self, s): str1 = s str2 = str1[:][::-1] # 将字符串反转 cell = np.zeros((len(str1) + 1, len(str2) + 1)) # 字符串长度+1 for i in range(len(str1)): for j in range(len(str2)): if str1[i] == str2[j]: cell[i][j] = cell[i - 1][j - 1] + 1 else: cell[i][j] = max(cell[i - 1][j], cell[i][j - 1]) print(len(str1) - int(np.max(cell)))Solution().longestPalindrome(input(&quot;请输入字符串：&quot;)) # 先实例化类再调用当我在本地写好代码运行可以成功了以后，到牛客网的在线编辑器中再次编辑却是一直运行不了。后来再知道原来牛客网的在线编辑器有自己的规范，不能随意使用第三方包，输入也要有规定的样式。点击这里查看牛客网在线判题系统使用帮助。于是我又把我的代码修改了一下。符合牛客网在线判题系统规范的代码123456789101112131415161718192021import sysclass Solution: def longestPalindrome(self, s): str1 = s str2 = str1[::-1] length = len(str1) cell = [[0] * (length + 1) for i in range(length + 1)] # 字符串长度+1 for i in range(len(str1)): for j in range(len(str2)): if str1[i] == str2[j]: cell[i][j] = cell[i - 1][j - 1] + 1 else: cell[i][j] = max(cell[i - 1][j], cell[i][j - 1]) return length - max(max(cell))if __name__ == &apos;__main__&apos;: for line in sys.stdin: print(Solution().longestPalindrome(line.strip())) //使用sys.stdin获取的字符串有&quot;\n&quot;需要使用strip()来去除空格和多余的符号，如下图修改代码以后就成功啦。嘿嘿。花了一晚上研究这道题，对算法和动态规划有了一点初步的了解，让我对算法有了更多的认识，不再觉得算法是一些太高大上太难的东西，以后还得努力学习！冲鸭。]]></content>
      <categories>
        <category>Data Structures &amp; Algorithms</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Python3</tag>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>最长公共子序列</tag>
        <tag>最长公共子串</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MyQR生成特色二维码]]></title>
    <url>%2Fmyqrcode%2F</url>
    <content type="text"><![CDATA[Python 二维码生成器可生成普通二维码、带图片的艺术二维码（黑白与彩色）、动态二维码（黑白与彩色）。首先安装MyQR库，直接用pip install myqr(or MyQR)。需要注意的是MyQR依赖于python3，在python2的环境下可能无法正常运行。help(myqr) 参数说明Positional parameterwords: strOptional parametersversion: int, from 1 to 40level: str, just one of (‘L’,’M’,’Q’,’H’)picutre: str, a filename of a imagecolorized: boolconstrast: floatbrightness: floatsave_name: str, the output filename like ‘example.png’save_dir: str, the output directory1.生成普通二维码在程序中导入MyQR包下的模板myqr，其中word参数接收一个字符串作为二维码的内容。12from MyQR import myqr # 注意大小写myqr.run(words='https://www.lee1224.com')运行后生成一个名为“qrcode.png”的二维码图片，用微信扫一扫或者其他扫一扫工具生成的二维码，就会自动跳转到这个地址。如果输入文字扫描后就会显示扫描的文字。2.生成带图片的二维码1myqr.run("https://www.lee1224.com", picture='要合成的图片名.png', colorized=True, save_name='保存的图片名.png')此为彩色图片代码，需要黑白图片就去掉参数colorized=True。另外注意把图片和代码放在同一路径中，否则会报错找不到图片。3.生成动态二维码12myqr.run(words='https://www.lee1224.com',picture='要合成的图片名.gif',colorized=True)最后附上这个MyQR。]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>pip</tag>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>特色二维码</tag>
        <tag>qrcode</tag>
        <tag>MyQR</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[word长文档格式化排版]]></title>
    <url>%2Fwordpb%2F</url>
    <content type="text"><![CDATA[word这款软件可谓是无处不在，写论文写报告写项目计划书…只要是跟文字搭边的工作都离不开它。所以了解一下word长文档格式化是很有必要的。(adsbygoogle=window.adsbygoogle||[]).push({})本例作为示范的格式要求比较简单：一、文本编辑打开word2016软件就可以直接进行文本的编辑工作了。录入格式的方式根据自己的习惯来，可以一边写一边录入格式，也可以像我一样先不用任何格式把文章写完然后再统一录入格式。本例是先写文章后录入格式。在写作的时候要严格按照规范来设置不同层级（层级分明）的标题例如：二、录入格式2.1样式工具首先打开样式工具：点击选项：将显示的样式设置为“正在使用的格式”：效果：2.2新建样式根据格式规范要求建立相应的样式（以大标题为例）:大标题格式要求： 2.2.1新建样式：2.2.2设置样式：字体（黑体小3号）：段落格式（居中；段前30磅、段后30磅、行距固定值20磅）：2.3改变样式先用选中需要录入格式的部分，然后再点击样式，如图：1、2、一种样式被创建好之后，就可以通过这种选中文本，然后在选中样式工具栏选择样式来改变文本的样式。是不是很方便。正文样式使用鼠标右击选择修改来更改样式。如果不像通过选中文本来更改样式，可以直接奖鼠标放在该段落，改变样式时，对整个段落生效.2.4检查样式按shift+f1组合键唤出显示格式工具来进行检查：其余的样式创建和录入方式都是一样的步骤，不再一一演示。效果图如下：三、插入图片，并修改格式如果直接截图粘贴到文档中可能会这样：(感觉图片好像沉到了字里面。)点击图片，选中新出来的图片格式标签设置图片位置：点选下拉框底部的其他布局选项在对话框中选择，文字环绕中的上下型然后把图片拖动到适当的位置,调整到合适的大小插入图注右击图片点选插入题注把题注样式更改为要求的格式（图的标码须在图的正下方居中；宋体5号；段前6磅、段后6磅、行距固定值20磅）组合图片和图注此时虽然图片和图注都有了但是图片被拖动时图注不会跟着一起动，所以需要组合。先选中图片，然后按住键盘shift键，再点选图注。如图：然后右击点选组合，大功告成！这样图注和图片就是一体的啦，如果要改同样可以点选右击菜单中的取消组合。四、分节为啥要分节呢？首先我们来看一下市面上购买的书籍看到这两张图是不是明白了点什么呢？使用这个奇数页分节符把奇数页放在每个章节大标题的前面就可以确保每个章节的标题都会在奇数页开始新页。即使偶数页留空，也会自动放到奇数页去。这很重要知道了为什么要分节符，那么就开始吧。在每个章节标题上添加一个奇数页分节符。五、自动生成目录当样式录入完成了以后就可以自动生成目录啦，目录会根据事先分好的大纲级别来自动生成，到这里应该就能明白，为什么标题层级和大纲级别一定要分明了吧。把光标停留在第一章之上的奇数页分节符之前，如图：然后！看图：（请点自动目录！手动的要自己填！）然后就要来修改目录的文本格式了。当我们生成目录时就会自动创建对应的样式，如图所示，我只想改下“目录”两个字的样式，所以我只要修改这个叫做“TOC标题”的样式就行啦：六、自动生成封面还要记得把封面上的分页符的前面再加上一个一样的分节符，确保封面有正反两面，然后再添加一个奇数页分节符， 让目录是在新的奇数页上！如果理解不了为啥要再加一个分页符多出一个空页，那就随便找本书，看看它的封面，是不是正面有内容，背面就是一个空页？再添加一个奇数页分节符是为了把封面单独分出作为一节，方便设置页码。七、设置页码首先要知道的是：封面不用页码目录页码和内容页码不一样然后就开始操作：首先插入页码（生成的页码如图）:把鼠标光标放在目录第一页页码上，进入设置页码选项卡，然后把续前节改为起始页码为1，意思就是不要续着前面的页码重新排列。然后把鼠标放到内容的第一章第一页的页码上进行同样的操作。现在的页码已经基本是符合要求了：最后我们把封面和封面背面那张空白页的页码删除来看下效果（进入打印预览就可以看到打印的效果）：当我们删除封面的页码时会发现所有的页码都不见了，别慌，我们把鼠标光标放到目录页的第一页，然后看这里。把这个链接到前一条页眉去掉以后是不是就发现，删除封面的页码后，其余的页码都还在呢？嘿嘿。八、页眉设置为了可以让大家更好地看到奇数页和偶数页的不同，我添加了一些“凑字数”来填充空白页，显示出留空的偶数页的状态。在之前已经说过通常书本的，奇数页页眉都会随着章节内容不同而变化，偶数页的页眉内容则时固定的。首先插入页眉勾选奇数页和偶数页不同，对奇数页和偶数页进行不同的设置8.1奇数页页眉设置封面不要页眉，和页码一样首先把鼠标光标放到目录第一页页眉处，把链接到前一条页眉去掉然后把封面第一页上的页眉删了就完事了。目录部分和内容部分的奇数页页眉页不要链接！所以把鼠标光标放到第一章的第一页的页眉除，同样把“链接到前一条页眉”的选中状态去掉。然后设置自动生成页眉1.鼠标光标依然放在第一章第一页的页眉处，把上面的文字全部删除。2.然后点击文档部件，点选域。3.然后选中StyleRef在右边点选大标题。4.效果自己看：所有的奇数页的页眉都变成了章节大标题。5.设置目录的奇数页标题。（操作和上面一样）把鼠标放到目录第一页页眉处删除原有的文本内容，光标停留在此处，直接打上目录两个字，那么所有的目录奇数页的页眉都会变成目录两个字！8.2偶数页页眉设置封面不要页眉，和页码一样首先把鼠标光标放到目录第2页页眉处，把链接到前一条页眉去掉。然后把封面第一页上的页眉删了就完事了。目录部分和内容部分的奇数页页眉页不要链接！所以把鼠标光标放到第一章的第一页的页眉处，同样把“链接到前一条页眉”的选中状态去掉。这时，除了封面的背面，所有的偶数页的页眉都是链接在一起的，所以我们可以随便找一页偶数页在上面写上内容，那就所有的偶数页都会同步！看效果：九、完成！现在你可以，拿着这份文档去到打印店，骄傲地说一声：“老板，双面打印！”总结：长文档排版过程虽然繁琐，但其实并不难。熟能生巧，多练练就行了，不能总依赖别人。如果理解不了一些排版格式，可以拿常见的出版书作为参考，想象到底是怎么实现的。多在打印预览中查看实际打印效果。这些都是我个人的一些经验，不一定时最好的方法，欢迎大家一起交流，发现啥不足之处请批评指正。本文使用文档下载地址：下载]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>word2016</tag>
        <tag>论文排版</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux安装和卸载MySQL]]></title>
    <url>%2Flinuxmysql%2F</url>
    <content type="text"><![CDATA[MySQL 是最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。(adsbygoogle=window.adsbygoogle||[]).push({})1、MySQL 安装所有平台的 MySQL 下载地址为：MySQL。 挑选你需要的 MySQL Community Server 版本及对应的平台。安装前，我们可以检测系统是否自带安装 MySQL或者mariadb:12rpm -qa | grep mysqlrpm -pa | grep mariadb如果你系统有安装，那可以选择进行卸载:12rpm -e mysql-xxxx // 普通删除模式rpm -e --nodeps mysql-xxxx // 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除接下来我们在 Centos7 系统下使用 yum 命令安装 MySQL，需要注意的是 CentOS 7 版本中 MySQL数据库已从默认的程序列表中移除，所以在安装前我们需要先去官网下载 Yum 资源包，下载地址为：MySQL12345wget https://dev.mysql.com/get/mysql80-community-release-el7-2.noarch.rpmrpm -ivh mysql80-community-release-el7-2.noarch.rpmyum clean allyum makecacheyum install mysql-server使用yum安装MySQL当我们在使用yum安装mysql时，yum默认会从yum仓库中安装mysql最新的GA版本；查看mysql yum仓库中mysql版本，使用如下命令：1vim /etc/yum.repos.d/mysql-community.repo 将相应版本下的enabled改成 1 即可。然后安装1yum install mysql-community-server2、验证 MySQL 安装在成功安装 MySQL 后，一些基础表会表初始化，在服务器启动后，你可以通过简单的测试来验证 MySQL 是否工作正常。使用 mysqladmin 工具来获取服务器状态：使用 mysqladmin 命令俩检查服务器的版本, 在 linux 上该二进制文件位于 /usr/bin 目录，在 Windows 上该二进制文件位于C:\mysql\bin 。1mysqladmin --versionlinux上该命令将输出以下结果，该结果基于你的系统信息：如果以上命令执行后未输入任何信息，说明你的Mysql未安装成功。3、Mysql安装后需要做的mysql在安装后会创建一个root@locahost账户，并且把初始的密码放到了/var/log/mysqld.log文件中1cat /var/log/mysqld.log | grep password #查看初始密码现在你可以通过以下命令来连接到Mysql服务器：12[root@host]# mysql -u root -pEnter password:*******你可以使用以下命令来创建root用户的密码：1ALTER USER 'root'@'localhost' IDENTIFIED BY 'MyNewPass4!';注意： 在输入密码时，密码是不会显示了，你正确输入即可。最后设置防火墙，放开3306端口。防火墙设置教程《Firewall和ssh安全设置 修改ssh默认端口 设置key密钥登录 添加防火墙规则》4、MySQL添加用户、删除用户与授权MySql中添加用户,新建数据库,用户授权,删除用户,修改密码(注意每行后边都跟个;表示一个命令语句结束):1.新建用户1.1 登录MYSQL：@&gt;mysql -u root -p@&gt;密码1.2 创建用户：1mysql&gt; CREATE USER 'test'@'localhost' IDENTIFIED BY '1234';这样就创建了一个名为：test 密码为：1234 的用户。注意： 此处的”localhost”，是指该用户只能在本地登录，不能在另外一台机器上远程登录。如果想远程登录的话，将”localhost”改为”%”，表示在任何一台电脑上都可以登录。也可以指定某台机器可以远程登录。1.3 然后登录一下：mysql&gt;exit;@&gt;mysql -u test -p@&gt;输入密码mysql&gt;登录成功2.为用户授权授权格式：grant all privileges on . to ‘tone‘@’%’ with grant option;2.1 登录MYSQL（有ROOT权限），这里以ROOT身份登录：@&gt;mysql -u root -p@&gt;密码2.2 首先为用户创建一个数据库(testDB)：mysql&gt;create database testDB;2.3 授权test用户拥有testDB数据库的所有权限（某个数据库的所有权限）：12mysql&gt;grant all privileges on *.* to 'tone'@'%' with grant option;mysql&gt;flush privileges; //刷新系统权限表2.4 如果想指定部分权限给一用户，可以这样来写:123mysql&gt;grant select,update on testDB.* to test@localhost identified by '1234'; mysql&gt;flush privileges; //刷新系统权限表2.5 授权test用户拥有所有数据库的某些权限：12345mysql&gt;grant select,delete,update,create,drop on *.* to test@"%" identified by "1234";//test用户对所有数据库都有select,delete,update,create,drop 权限。//@"%" 表示对所有非本地主机授权，不包括localhost。（localhost地址设为127.0.0.1，如果设为真实的本地地址，不知道是否可以，没有验证。）//对localhost授权：加上一句grant all privileges on testDB.* to test@localhost identified by '1234';即可。3. 删除用户12345678@&gt;mysql -u root -p@&gt;密码mysql&gt;Delete FROM user Where User='test' and Host='localhost';mysql&gt;flush privileges;mysql&gt;drop database testDB; //删除用户的数据库删除账户及权限：&gt;drop user 用户名@'%';&gt;drop user 用户名@ localhost; 4. 修改指定用户密码@&gt;mysql -u root -p@&gt;密码mysql&gt;update mysql.user set password=password(‘新密码’) where User=”test” and Host=”localhost”;mysql&gt;flush privileges;5. 列出所有数据库mysql&gt;show database;6. 切换数据库mysql&gt;use ‘数据库名’;7. 列出所有表mysql&gt;show tables;8. 显示数据表结构mysql&gt;describe 表名;9. 删除数据库和数据表mysql&gt;drop database 数据库名;mysql&gt;drop table 数据表名;5、CentOS下MySQL的彻底卸载查看MySQL是否安装:方式1:1234567891011[root@localhost usr]# yum list installed mysql* Loaded plugins: fastestmirror Loading mirror speeds from cached hostfile * base: mirrors.yun-idc.com * extras: mirror.neu.edu.cn * updates: mirrors.yun-idc.com Installed Packages MySQL-client.x86_64 5.6.27-1.el6 installed MySQL-devel.x86_64 5.6.27-1.el6 installed MySQL-server.x86_64 5.6.27-1.el6 installed [root@localhost usr]# 方式2( -i :不区分大小写)：12345[root@localhost usr]# rpm -qa | grep -i mysql MySQL-server-5.6.27-1.el6.x86_64 MySQL-client-5.6.27-1.el6.x86_64 MySQL-devel-5.6.27-1.el6.x86_64 [root@localhost usr]# 卸载：[root@localhost usr]# rm -rf /var/lib/mysql[root@localhost usr]# rm /etc/my.cnf如果装了mysql-devel(其他一样add command)，卸载为：1[root@Tony_ts_tian init.d]# yum remove mysql mysql-devel mysql-server mysql-libs compat-mysql51 注：（例如）:mysql-5.5.39-1.el6.remi.x86_64mysql-libs-5.5.39-1.el6.remi.x86_64compat-mysql51-5.1.54-1.el6.remi.x86_64mysql-server-5.5.39-1.el6.remi.x86_64卸载2{继续，1，2选择一种（此处为介绍）：}:123456789[root@localhost mysql]# rpm -aq | grep -i mysql MySQL-server-5.6.27-1.el6.x86_64 MySQL-client-5.6.27-1.el6.x86_64 MySQL-devel-5.6.27-1.el6.x86_64 [root@localhost mysql]# rpm -e MySQL-server-5.6.27-1.el6.x86_64 [root@localhost mysql]# rpm -e MySQL-client-5.6.27-1.el6.x86_64 [root@localhost mysql]# rpm -e MySQL-devel-5.6.27-1.el6.x86_64 [root@localhost rc.d]# cd /var/lib/ [root@localhost lib]# rm -rf mysql/ 注: 删除MySQL数据库目录(关键) ，否则password不更新（默认安装，如果自定义安装路径和链接路径ln -s ……请删除。）rm -rf /var/lib/mysql卸载3：123[root@localhost usr]# whereis mysql mysql: /usr/lib64/mysql [root@localhost usr]# rm -rf /usr/lib64/mysql 注：find / -name mysql注：清空相关mysql的所有目录以及文件和其他配置和设置等。如果有，则删除。也必须考虑其他软件不去影响。rm -rf /usr/lib/mysqlrm -rf /usr/share/mysql卸载4：12[root@localhost usr]# rm –rf /usr/my.cnf [root@localhost usr]# rm -rf /root/.mysql_sercret 卸载5（自启服务）：12[root@localhost usr]# chkconfig --list | grep -i mysql [root@localhost usr]# chkconfig --del mysqld 此处删除看自己设置:mysql/mysqld（原文链接：点这里）]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux安装Anaconda远程使用jupyter]]></title>
    <url>%2Fjupyternotebook%2F</url>
    <content type="text"><![CDATA[随时随地打开浏览器就能写python代码，不占用本地资源，充分利用Linux服务器。酷酷的~(adsbygoogle=window.adsbygoogle||[]).push({})点击注册腾讯云新用户无门槛领取总价值高达2775元代金券，每种代金券限量500张，先到先得。云服务器、云数据库特惠，服务更稳，速度更快，价格更优。点击此处三折起1、linux服务器安装anaconda:1.1 下载安装脚本：1wget https://repo.continuum.io/archive/Anaconda3-2018.12-Linux-x86_64.sh1.2 运行安装向导：1bash Anaconda3-2018.12-Linux-x86_64.sh1.3确认是否安装成功：1conda --version2、linux服务器配置juypter,然后远程使用jupyter:2.1进入环境ipython, 在ipython环境下输入：1234from notebook.auth import passwd passwd() #输入方便你记的密码，连续输；两次..输完密码后，会输出一个字符串，形如： ’sha1:9e7a5c5e0a29:8cbdvsv2344d141c92beab1c5bc6e9avsdvdsvsv’#将其保存下来, 完成以上操作后，通过exit()推出ipython环境2.2配置jupyter notebook进入到安装目录：cd /root/anaconda3/etc/jupyter, 执行 :12jupyter notebook --generate-config#（命令会产生配置文件：root/.jupyter/jupyter_notebook_config.py）编辑配置文件，编辑此文件，写入：1234567c.NotebookApp.ip = '*' #允许访问此服务器的 IP，星号表示任意 IPc.NotebookApp.password = u'sha1:454dfg64a84f:fa18fdgsg98794e8191bf787dfsgsdgtsd564564dgsc' # 之前生成的密码 hash 字串c.NotebookApp.open_browser = False # 运行时不打开本机浏览器c.NotebookApp.port = 666 # 使用的端口，随意设置c.NotebookApp.enable_mathjax = True # 启用 MathJaxc.NotebookApp.allow_root = Truec.NotebookApp.notebook_dir = u'/root/JupyterNotebook' #工作目录，保存代码项目文件。3、提示：安装好后，如果发现环境变量没有生效，Python后还是2.7版本，用以下方法解决：1234#将anaconda的bin目录加入PATH，根据版本不同，也可能是~/anaconda3/binecho 'export PATH="~/anaconda2/bin:$PATH"' &gt;&gt; ~/.bashrc#更新bashrc以立即生效source ~/.bashrc123echo 'export PATH="/usr/local/anaconda3/bin:$PATH"' &gt;&gt; /etc/profile source /etc/profileconda --version在浏览器输入服务器地址和jupyter端口，然后输入自己设定的jupyter密码就可以在线访问啦，是不是很方便呢？是！如果需要长时间让jupyter运行可以在vps后台控制面板使用VNC登陆方式打开jupyternotebook，这样就可以长时间运行啦。不需要的时候再登录进去ctrl+c关闭就可以了。]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>JupyterNotebook</tag>
        <tag>Python3</tag>
        <tag>Anaconda</tag>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx搭建hexo博客]]></title>
    <url>%2FNginxhexo%2F</url>
    <content type="text"><![CDATA[很多同学喜欢把hexo博客搭建在gitpage或者codingpage上，今天我尝试了下把它搭建在vps上。实现gitpage、codingpage和vps同步部署。首先我们要弄明白，它的原理。hexo的部署工作其实就是把，hexo根目录下的public文件夹中的内容推送到服务器上。我们甚至可以直接把public文件夹中的内容拷贝到，nginx的网站根目录下来实现访问。但这样太麻烦了，我们可以通过设置来达到一次部署多端推送的目的。(adsbygoogle=window.adsbygoogle||[]).push({})1、服务器环境搭建1.1安装git和nginx1234yum install gityum install -y nginx#启动nginx服务service nginx start1.2创建一个网站的根目录（用于存放网站的部署的静态文件）12#先找到自己的网站目录创建一个新的文件夹blogmkdir blog1.3建立git仓库1git init --bare blog.git1.4使用 git-hooks 同步网站根目录在这里我们使用的是 post-receive这个钩子，当git有收发的时候就会调用这个钩子。 在 ~/blog.git 裸库的hooks文件夹中，新建post-receive文件。123#!/bin/bashrm -rf /var/www/bloggit clone /root/blog.git /var/www/blog意思就是删除/var/www/blog/下的文件，并将root/blog.git下的文件clone到/var/www/blog目录下，这里注意一下，我这里使用的是cenOS服务器，登录默认给予的是root权限，所以这里的/root即为/home然后我们赋予这个文件夹权限：1chmod +x post-receive1.5配置Nginx1vim /etc/nginx/conf.d/blog.conf在里面添加：12345server&#123; listen 80; server_name www.lee1224.com lee1224.com; root /var/www/blog;&#125;重启nginx：1service nginx restart2、本地hexo配置当我们完成了上述服务器端操作时候，就要回到本地，开始配置hexo。进入我们本地初始化的项目源文件中，看到有一个_config.yml文件，是整个项目的配置文件，打开在最后一行你会发现deploy字样，输入下列信息：123deploy: type: git repo: root@IP:blog.git3、补充设置完成后发现每次部署都要输入Linux登录密码。我们可以通过配置配置SSH公钥。1、生成公钥。1ssh-keygen注意： 键入这个命令后，会提示让你给这个公钥配置密码（passphrase），我们既然是为了避免多次输入密码， 这里为什么还要给公钥配置密码呢，所以我们要一路回车，不理他（会出现三次）2、然后将本地公钥拷贝到服务器。12#首先cd到公钥目录ssh user@host 'mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys' &lt; ~/.ssh/id_rsa.pub这条命令由多个语句组成，依次分解开来看：（1）”$ ssh user@host”，表示登录远程主机；（2）单引号中的mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys，表示登录后在远程shell上执行的命令：（3）”$ mkdir -p .ssh”的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；（4）’cat &gt;&gt; .ssh/authorized_keys’ &lt; ~/.ssh/id_rsa.pub的作用是，将本地的公钥文件~/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。写入authorized_keys文件后，公钥登录的设置就完成了。到这里就全都配置完毕啦！]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Linux</tag>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo博客图床的选择和设置]]></title>
    <url>%2Ftcsz%2F</url>
    <content type="text"><![CDATA[图床:一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。(adsbygoogle=window.adsbygoogle||[]).push({})1.为什么？&emsp;hexo部署在Gitpage或者codingpage上的博客，通常都是使用M↓（markdown）标记语言来写博客，并且不能像csdn和其他平台那样直接从本地拖拽图片自动上传引用。所以使用图片时不是很方便。这时候我们就会想，难道我们自己搭建的博客就时没有大平台的方便吗？非也！自己搭建的博客也可以很方便，还更具有个性！2.怎么做&emsp;下面我就来介绍以下巧妙地使用 腾讯云 的 对象储存 来作为图床，达到对博客图片的储存，使用和管理都十分地方便，并且所有权限都掌握在自己手里不用担心图片丢失之类的问题咯。腾讯云的 对象储存 收费便宜，并且免费流量巨大，基本上访问量不是很大的个人博客都是用不完的！并且访问速度快，免费请求数量多。本博客使用的 对象储存 和 CDN加速等都是腾讯云的产品。2.1首先注册腾讯云账号并且创建储存桶点击这里注册腾讯云账号,领取新用户专属大礼包创建储存桶，名字自己随便填，权限选择公读私写。 创建好储存桶后可以根据自己需要对该桶进行配置。例如：防盗链设置、CDN加速设置等。（关于CDN加速和防盗链设置在本站的另外一篇文章《使用CDN给网站加速》中会详细讲解。）2.2上传和引用图片当图片被上传到储存桶之后就可以进行引用了，可以在markdown图片标签中直接填入图片的链接进行引用。 这里还要特别推荐一款工具 HexoEditor 这是一款专门针对hexo博客书写和发布博客而生的一款软件。支持直接截图把图片粘贴到markdown文本中和一键上传到腾讯云并使用图床地址。自动上传的图片还会以文章名字命名的文件夹进行分开存储，图片的名字由生成时间和随机数组成，方便管理。关于这款工具，可以参阅HexoEditor详细说明。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>图床</tag>
        <tag>对象储存</tag>
        <tag>腾讯云</tag>
        <tag>图片外链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用CDN给网站加速]]></title>
    <url>%2Fcdnjs%2F</url>
    <content type="text"><![CDATA[CDN即内容分发网络，基本原理是用放置在各处的节点服务器将用户的访问导向到离用户最近的一台服务器上，提高internet访问速度。(adsbygoogle=window.adsbygoogle||[]).push({})1、加速原理假设您的业务源站域名为 www.test.com，域名接入 CDN 开始使用加速服务后，当您的用户发起 HTTP 请求时，实际的处理流程如下图所示：详细说明如下：用户向 www.test.com 下的某图片资源（如：1.jpg）发起请求，会先向 Local DNS 发起域名解析请求。当 Local DNS 解析 www.test.com 时，会发现已经配置了 CNAME www.test.com.cdn.dnsv1.com，解析请求会发送至 Tencent DNS（GSLB），GSLB 为腾讯云自主研发的调度体系，会为请求分配最佳节点 IP。Local DNS 获取 Tencent DNS 返回的解析 IP。用户获取解析 IP。用户向获取的 IP 发起对资源 1.jpg 的访问请求。若该 IP 对应的节点缓存有 1.jpg，则会将数据直接返回给用户（10），此时请求结束。若该节点未缓存 1.jpg，则节点会向业务源站发起对 1.jpg 的请求（6、7、8），获取资源后，结合用户自定义配置的缓存策略（可参考产品文档中的 缓存过期配置），将资源缓存至节点（9），并返回给用户（10），此时请求结束。2、给对象储存COS加速一步开启！想要开启自定义加速域可以直接点击添加域名，然后到CDN加速域名列表中去设置具体细节。3、给gitpage加速由于github服务器地处遥远，我们的gitpage可以通过cdn加速来提升自己地gitpage浏览体验。首先在腾讯云开通CDN服务,然后添加域名配置好后可以根据自己的需要设置相关配置，不懂得地方可以参阅腾讯云官方的文档说明。提示： 加速域名中的回源host必须和gitpage的自定义域名一致才行，否则无法回源。 这些设置都搞定了以后，把需要加速的域名解析到给定的CNAME，然后就大功告成了。在解析的时候有个小提示，可以把境内线路的解析到加速CNAME，而把默认的解析到GitHubpage本身的地址，因为国外访问GitHub速度还是很快的。这个cdn加速也是只限于国内的。4.给一般网站加速都会给gitpage加速了，还不会给网站加速？不说了！直接看效果吧。]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>hexo</tag>
        <tag>CDN加速</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo百度主动推送和sitemap的生成]]></title>
    <url>%2Fbdseo%2F</url>
    <content type="text"><![CDATA[1.百度推送的作用作用：某些主机，比如Github，禁止百度爬虫访问博客，导致博客无法被百度收录。多亏百度提供了主动提交的接口，这才有了个补救的方法。除此之外， 使用主动推送还会达到如下功效：及时发现：可以缩短百度爬虫发现您站点新链接的时间，使新发布的页面可以在第一时间被百度收录保护原创：对于网站的最新原创内容，使用主动推送功能可以快速通知到百度，使内容可以在转发之前被百度发现(adsbygoogle=window.adsbygoogle||[]).push({})2.在hexo中添加百度主动推送功能2.1安装hexo-baidu-url-submit插件首先，在Hexo博客根目录下，打开git-bash，输入下面命令：1npm install hexo-baidu-url-submit --save 安装插件。2.2在博客配置文件中添加baidu-url-submit的配置项把以下内容配置到博客配置文件_config.yml中。123456# 设置百度主动推送 baidu_url_submit: count: 200 #比如200，代表提交最新的200个链接 host: www.lansheng.net.cn # 在百度站长平台中注册的域名，这个改为你自己的域名 token: your_token # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里! path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里，这个默认 这个密钥可以从百度站长平台的自动推送接口那里获取到。在百度搜索资源平台,进入到自己站点管理，打开链接提交页面，如下图所示：在自动推送接口那里找自己的密钥，如图所示：2.3在博客配置文件中加入新的deploy配置项同样在博客配置文件_config.yml中找到deploy项，添加新的推送项，如下所示：1234567 deploy: - type: git repo: coding: git@git.coding.net:你的coding用户名/你的coding用户名.coding.me.git #coding地址 github: git@github.com:你的github用户名/你的github用户名.github.io.git # Github地址 branch: master- type: baidu_url_submitter2.4验证配置是否成功最后输入命令hexo s看看能不能启动本地服务器，如果就没问题了。可以输入命令hexo d部署即可。成功不是可以在git-bash中看到如下的信息:2.5卸载1npm uninstall hexo-baidu-url-submit然后在博客配置文件中，删除上面的配置项，即可。3.添加sitemap和baidusitemap站点地图是一种文件，您可以通过该文件列出您网站上的网页，从而将您网站内容的组织架构告知Google和其他搜索引擎。Googlebot等搜索引擎网页抓取工具会读取此文件，以便更加智能地抓取您的网站3.1安装插件打开hexo目录下的dos命令行，分别安装百度和google插件12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save在博客目录的_config.yml中添加如下代码12345#自动生成sitemapsitemap:path: sitemap.xmlbaidusitemap:path: baidusitemap.xml编译你的博客1hexo g如果你在你的博客根目录的public下面发现生成了sitemap.xml以及baidusitemap.xml就表示成功了4.提示注意把博客的配置文件_config.yml中的url设置成你的博客域名，否则生成的找点地图域名会不正确。例如：假如url设置是这样：1234 # URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://www.yoursite.com那么主动推送的地址和生成站点地图的域名都会是www.yoursite.com如图所示：这样肯定是不行的！5.效果5.1把站点地图提交给百度到sitemap这填写站点地图地址提交提交以后就等待吧。一段时间后就会自动提交站点地图中的链接啦，如图所示：最后我们可以在百度搜索资源平台查看链接提交情况如图所示： 这么看来我们的链接提交是成功的。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>hexo</tag>
        <tag>sitemap</tag>
        <tag>百度主动推送</tag>
        <tag>seo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[搭建hexo博客+next主题优化]]></title>
    <url>%2Fhexoyh%2F</url>
    <content type="text"><![CDATA[一、了解hexoHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。(adsbygoogle=window.adsbygoogle||[]).push({})二、安装hexo安装部分请参阅hexo官方文档里面有详细的安装使用图文和视频教程！三、应用next主题详细的安装使用教程可以参阅NexT使用文档说到这里，不得不提一下GitHub。GitHub可真是个好东西，里面有很多牛人分享了很多值得我们学习的开源资源，有不懂的地方还可以向大牛提问超赞。GitHub几乎是全英文的所以适当提高英文水平也是必要的，能看懂别人说的是啥就差不多了。看不懂也不要紧可以借助翻译工具和Google百度等“老师”来帮助我们理解。四、主题优化4.1设置主题风格123456789# ---------------------------------------------------------------# Scheme Settings# ---------------------------------------------------------------# Schemes#scheme: Muse # 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白#scheme: Mist # Muse 的紧凑版本，整洁有序的单栏外观scheme: Pisces # 双栏 Scheme，小家碧玉似的清新#scheme: Gemini # 类似 Pisces4.2设置菜单项的显示文本和图标NexT 使用的是 Font Awesome 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。4.3设置菜单项对应的文件目录打开themes/next下的_config.yml文件，搜索 menu关键字，以#注释原有的菜单项，或者新增新的菜单项。123456789101112131415# ---------------------------------------------------------------# Menu Settings# ---------------------------------------------------------------# When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash (/archives -&gt; archives)menu: home: / categories: /categories/ #about: /about/ archives: /archives/ #tags: /tags/ #sitemap: /sitemap.xml #commonweal: /404/ #新增menu catalogue: /catalogues/除了home，archives,/后面都需要手动创建这个页面4.3.1创建菜单项对应文件目录以分类为例12$ cd your-hexo-site$ hexo new page categories编辑刚新建的页面,设置分类1234title: categoriesdate: 2017-07-10 16:36:26type: "categories"comments: false4.4头像设置4.4.1添加头像打开themes/next下的_config.yml文件，搜索 Sidebar Avatar关键字，去掉avatar前面的#1234# Sidebar Avatar# in theme directory(source/images): /images/avatar.jpg# in site directory(source/uploads): /uploads/avatar.jpgavatar: http://example.com/avatar.png或者使用本地图片,把图片放入themes/next/source/images下,修改avatar1avatar: /images/blogLogo.png4.4.2设置头像边框为圆形框打开位于themes/next/source/css/_common/components/sidebar/下的sidebar-author.syl文件,修改如下123456789101112.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; // 修改头像边框 border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%;&#125;4.4.3特效：鼠标放置头像上旋转打开同上文件修改为：123456789101112131415161718192021.site-author-image &#123; display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; // 修改头像边框 border-radius: 50%; -webkit-border-radius: 50%; -moz-border-radius: 50%; // 设置旋转 transition: 1.4s all;&#125;// 可旋转的圆形头像,`hover`动作.site-author-image:hover &#123; -webkit-transform: rotate(360deg); -moz-transform: rotate(360deg); -ms-transform: rotate(360deg); -transform: rotate(360deg);&#125;4.5好玩的写作样式NexT 主题自带的标签样式，请参阅 NexT内建标签在主题配置文件_config.yml里有一个关于这个的配置，但官方文档没有提供 HTML 的使用方式，个人认为这种方式更简单，也不会产生一些奇怪的显示 bug……首先可以在主题配置文件中修改配置：123456789# Note tag (bs-callout).note: # 风格 style: flat # 要不要图标 icons: true # 圆角矩形 border_radius: 3 light_bg_offset:1234567&lt;div class="note default"&gt;&lt;p&gt;default&lt;/p&gt;&lt;/div&gt;&lt;div class="note primary"&gt;&lt;p&gt;primary&lt;/p&gt;&lt;/div&gt;&lt;div class="note success"&gt;&lt;p&gt;success&lt;/p&gt;&lt;/div&gt;&lt;div class="note info"&gt;&lt;p&gt;info&lt;/p&gt;&lt;/div&gt;&lt;div class="note warning"&gt;&lt;p&gt;warning&lt;/p&gt;&lt;/div&gt;&lt;div class="note danger"&gt;&lt;p&gt;danger&lt;/p&gt;&lt;/div&gt;&lt;div class="note danger no-icon"&gt;&lt;p&gt;danger no-icon&lt;/p&gt;&lt;/div&gt;defaultprimarysuccessinfowarningdangerdanger no-icon主题自带样式 label 标签首先可以在主题配置文件中有配置，需要配置下12# Label tag.label: true然后效果如下（@ 前面的是label的名字，后面的是要显示的文字）：123456&#123;% label default@default %&#125;&#123;% label primary@primary %&#125;&#123;% label success@success %&#125;&#123;% label info@info %&#125;&#123;% label warning@warning %&#125;&#123;% label danger@danger %&#125;default primary success info warning danger主题自带样式 tabs 标签首先可以在主题配置文件中有配置，需要配置下1234567# Tabs tag.tabs: enable: true transition: tabs: true labels: true border_radius: 01234567891011&#123;% tabs 选项卡, 2 %&#125;&lt;!-- tab --&gt;**这是选项卡 1** hello thank you thank you vary much&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 2**&lt;!-- endtab --&gt;&lt;!-- tab --&gt;**这是选项卡 3** 我是老三！&lt;!-- endtab --&gt;&#123;% endtabs %&#125;选项卡 1选项卡 2选项卡 3这是选项卡 1 hello thank you thank you vary much这是选项卡 2这是选项卡 3 我是老三！按钮。示例：1234567891011121314151617181920212223&#123;% button #, Text %&#125;&#123;% btn #, Text %&#125;&#123;% btn #, Text &amp; Title,, Title %&#125;&#123;% btn #, Text %&#125; &#123;% btn #, Text &amp; Title,, Title %&#125;&#123;% btn #, Text %&#125;&#123;% btn #, Text &amp; Title,, Title %&#125;&#123;% btn #,, home fa-5x %&#125;&#123;% btn #,, home fa-4x %&#125;&#123;% btn #,, home fa-3x %&#125;&#123;% btn #,, home fa-2x %&#125;&#123;% btn #,, home fa-lg %&#125;&#123;% btn #,, home %&#125;&#123;% btn #, Text &amp; Icon (buggy), home %&#125;&#123;% btn #, Text &amp; Icon (fixed width), home fa-fw %&#125;&#123;% btn #, Text &amp; Large Icon, home fa-fw fa-lg %&#125;&#123;% btn #, Text &amp; Large Icon &amp; Title, home fa-fw fa-lg, Title %&#125;&#123;% note default %&#125;&#123;% btn #, Text &amp; Icon, home fa-fw %&#125;&#123;% btn #,, home, Title %&#125;&#123;% btn #, Text %&#125;&#123;% endnote %&#125;&lt;div class="text-center"&gt;&lt;span&gt;&#123;% btn #,, header %&#125;&#123;% btn #,, edge %&#125;&#123;% btn #,, times %&#125;&#123;% btn #,, circle-o %&#125;&lt;/span&gt;&lt;span&gt;&#123;% btn #,, italic %&#125;&#123;% btn #,, scribd %&#125;&lt;/span&gt;&lt;span&gt;&#123;% btn #,, google %&#125;&#123;% btn #,, chrome %&#125;&#123;% btn #,, opera %&#125;&#123;% btn #,, diamond fa-rotate-270 %&#125;&lt;/span&gt;&lt;/div&gt;&lt;div class="text-center"&gt;&#123;% btn #, Almost, adn fa-fw fa-lg %&#125; &#123;% btn #, Over, terminal fa-fw fa-lg %&#125;&lt;/div&gt;&lt;div class="text-right"&gt;&#123;% btn #, Test is finished., check fa-fw fa-lg, Button tag test is finished. %&#125;&lt;/div&gt;TextTextText & TitleText Text & TitleTextText & Title Text & Icon (buggy) Text & Icon (fixed width)Text & Large Icon Text & Large Icon & TitleText &amp; IconTextAlmost OverTest is finished.关于next主题优化的更多使用可以前往这个页面查看。关于按钮的更多使用可以前往这个页面查看。4.6.1文章底部添加结束语打开\themes\next\layout_macro\post.swig文件，在post-body后，post-footer前，添加下面内容(注意缩进)：123&#123;% if theme.passage_end_tag.enabled and not is_index %&#125; &lt;div style="text-align: center;font-size: 13px;letter-spacing: 10px;user-select: none;margin-top: 50px;color: #bbb;"&gt;本文结束啦 &lt;i class="fa fa-paw"&gt;&lt;/i&gt; 感谢您阅读&lt;/div&gt;&#123;% endif %&#125;打开主题配置文件（_config.yml),在末尾添加：123# 文章末尾添加“本文结束”标记注意缩进 2个空格passage_end_tag: enabled: true还可以通过include方式来添加\themes\next\layout\_macro\passage-end-tag.swig1&lt;div style="text-align: center;font-size: 13px;letter-spacing: 10px;user-select: none;margin-top: 50px;color: #bbb;"&gt;本文结束啦 &lt;i class="fa fa-paw"&gt;&lt;/i&gt; 感谢您阅读&lt;/div&gt;123&#123;% if theme.passage_end_tag.enabled and not is_index %&#125; &#123;% include 'passage-end-tag.swig' %&#125;&#123;% endif %&#125;4.7添加页面崩溃欺骗搞怪在next\source\js\src文件夹下创建crash_cheat.js，添加代码：crash_cheat.js123456789101112131415&lt;!--崩溃欺骗--&gt; var OriginTitle = document.title; var titleTime; document.addEventListener('visibilitychange', function () &#123; if (document.hidden) &#123; document.title = '哦豁~页面崩溃啦 ~'; clearTimeout(titleTime); &#125; else &#123; document.title = '嘿！又好了~' + OriginTitle; titleTime = setTimeout(function () &#123; document.title = OriginTitle; &#125;, 2000); &#125; &#125;);在next\layout_layout.swig文件中，添加引用（注：在swig末尾添加）：12&lt;!--崩溃欺骗--&gt;&lt;script type="text/javascript" src="/js/src/crash_cheat.js"&gt;&lt;/script&gt;4.8静态资源压缩不知是主题原因还是其他原因，生成的静态文件存在大量空白，在一定程度上影响了网页加载。网上寻找解决方案,可以对文件进行压缩。使用hexo-neat压缩静态资源Hexo瞎折腾系列(5) - 使用hexo-neat插件压缩页面静态资源Hexo+Next个人博客主题优化4.9添加github Ribbons和github Cornersgithub Ribbons12种样式的GitHub彩带，复制其中的超链代码。在themes\next\layout_layout.swig目录下找到头部彩带相关的代码：1&lt;div class="headband"&gt;&lt;/div&gt;在这里的div标签内部添加我们刚刚复制的超链代码，并修改超链指向GitHub地址：123&lt;div class="headband"&gt; &lt;a href="https://github.com/dp1224"&gt;&lt;img style="position: absolute; top: 0; right: 0; border: 0;" src="https://lee1224-1257254543.file.myqcloud.com/githubRibbons/onuse.png" alt="Fork me on GitHub"&gt;&lt;/a&gt;&lt;/div&gt;github Corners(GitHub banner)next主题自带GitHub Corners，复制其中的超链代码。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>黎雁鹏</tag>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java命名规范]]></title>
    <url>%2Fjavammgf%2F</url>
    <content type="text"><![CDATA[(adsbygoogle=window.adsbygoogle||[]).push({})一、命名规范1、 项目名全部小写2、 包名全部小写3、 类名首字母大写，如果类名由多个单词组成，每个单词的首字母都要大写。如：public class MyFirstClass{}4、 变量名、方法名首字母小写，如果名称由多个单词组成，每个单词的首字母都要大写。如：int index=0;public void toString(){} 5、 常量名全部大写如：public static final String GAME_COLOR=”RED”;6、所有命名规则必须遵循以下规则：名称只能由字母、数字、下划线、$符号组成不能以数字开头名称不能使用JAVA中的关键字。坚决不允许出现中文及拼音命名。二、注释规范1、 类注释在每个类前面必须加上类注释，注释模板如下：/*** Copyright (C), 2006-2010, ChengDu Lovo info. Co., Ltd. * FileName: Test.java * 类的详细说明 * * @author 类创建者姓名 * @Date 创建日期 * @version 1.00 */ 2、 属性注释(adsbygoogle=window.adsbygoogle||[]).push({})在每个属性前面必须加上属性注释，注释模板如下：/** 提示信息 */ private String strMsg = null; 3、 方法注释在每个方法前面必须加上方法注释，注释模板如下：/** * 类方法的详细使用说明 * * @param 参数1 参数1的使用说明 * @return 返回结果的说明 * @throws 异常类型.错误代码 注明从此类方法中抛出异常的说明 */ 4、 构造方法注释在每个构造方法前面必须加上注释，注释模板如下：/** * 构造方法的详细使用说明 * * @param 参数1 参数1的使用说明 * @throws 异常类型.错误代码 注明从此类方法中抛出异常的说明 */ 5、 方法内部注释在方法内部使用单行或者多行注释，该注释根据实际情况添加。如：//背景颜色Color bgColor = Color.RED 点击进入《Java常见面试题》]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java命名规范</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[欢乐时光]]></title>
    <url>%2Fhappytime%2F</url>
    <content type="text"><![CDATA[更新时间：11月8日返回《酸酸乳ssr教程与免费节点分享》点击查看更多免费高质量节点(adsbygoogle=window.adsbygoogle||[]).push({})1ssr://NDYuMjkuMTY3LjE0OjE5OTc6YXV0aF9zaGExX3Y0OmFlcy0xMjgtY3RyOnRsczEuMl90aWNrZXRfYXV0aDpabWRvYTJZdU5UUTJZeTVuZEdRMQ推荐：(adsbygoogle=window.adsbygoogle||[]).push({})1ssr://NjkuMTk0LjEwLjQ2OjY2NjphdXRoX3NoYTFfdjQ6YWVzLTEyOC1jdHI6dGxzMS4yX3RpY2tldF9hdXRoOmMyWm5Zbk5oYUdkbVp5NXlaWE5oZEdkb2RUUXo更多：(adsbygoogle=window.adsbygoogle||[]).push({})返回《酸酸乳ssr教程与免费节点分享》点击查看更多免费高质量节点]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>一只老菜鸡</tag>
        <tag>ShadowSocksR</tag>
        <tag>ShadowsocksX-NG-R</tag>
        <tag>酸酸乳</tag>
        <tag>ssr</tag>
        <tag>ssr节点</tag>
        <tag>ShadowRocket</tag>
        <tag>小火箭</tag>
        <tag>小飞机</tag>
        <tag>酸酸乳ssr免费节点分享</tag>
        <tag>酸酸乳ssr教程</tag>
      </tags>
  </entry>
</search>
